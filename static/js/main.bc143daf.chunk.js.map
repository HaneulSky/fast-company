{"version":3,"sources":["reportWebVitals.js","utils/validator.js","components/common/form/textField.jsx","components/common/form/selectField.jsx","components/common/form/radioField.jsx","components/common/form/multiSelectField.jsx","components/common/backButton.jsx","services/localStorage.service.js","services/user.service.js","hooks/useAuth.jsx","services/http.service.js","services/profession.service.js","hooks/useProfession.jsx","services/qualities.service.js","hooks/useQuality.jsx","components/page/editUserPage/index.js","components/page/editUserPage/editUserPage.jsx","components/ui/userCard.jsx","components/ui/qualities/qualitie.jsx","components/ui/qualities/qualitiesList.jsx","components/ui/qualitiesCard.jsx","components/ui/completedMeetingsCard.jsx","utils/formatDate.js","hooks/useUsers.jsx","components/common/comments/comment.jsx","components/common/comments/commentList.jsx","components/common/form/textAreaField.jsx","components/ui/addCommentForm.jsx","services/comment.service.js","hooks/useComments.jsx","components/ui/comments.jsx","components/page/userPage/index.js","components/page/userPage/userPage.jsx","components/common/pagination.jsx","components/common/groupList.jsx","components/ui/searchStatus.jsx","components/common/bookmark.jsx","components/ui/qualities/index.js","components/common/table/tableHeader.jsx","components/common/table/tableBody.jsx","components/common/table/index.js","components/common/table/table.jsx","components/ui/profession.jsx","components/ui/usersTable.jsx","components/page/usersListPage/index.js","components/page/usersListPage/usersListPage.jsx","utils/paginate.js","components/layouts/users.jsx","components/common/form/checkBoxField.jsx","components/ui/loginForm.jsx","components/ui/registerForm.jsx","components/layouts/login.jsx","components/layouts/logOut.jsx","utils/mockData.js","components/layouts/main.jsx","components/ui/navProfile.jsx","components/ui/navBar.jsx","app.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","validator","data","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","TextField","label","type","name","onChange","useState","showPassword","setShowPassword","className","htmlFor","id","target","onClick","prevState","defaultProps","SelectField","defaultOption","options","optionsArray","Array","isArray","Object","keys","map","optionName","_id","required","disabled","option","RadioField","handleChange","checked","MultiSelectField","selected","closeMenuOnSelect","isMulti","classNamePrefix","BackHistoryButton","history","useHistory","goBack","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USERID_KEY","setTokens","refreshToken","idToken","localId","expiresIn","expiresDate","Date","getTime","localStorage","setItem","localStorageService","getAccessToken","getItem","getRefreshToken","getTokenExpiresDate","getUserId","removeAuthData","removeItem","userEndPoint","userService","get","a","httpService","create","payload","put","getCurrentUser","httpAuth","axios","baseURL","params","key","process","REACT_APP_FIREBASE_KEY","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","currentUser","setCurrentUser","setError","isLoading","setLoading","randomInt","min","max","Math","floor","random","email","password","rest","url","post","returnSecureToken","createUser","rate","completedMeetings","image","toString","substring","errorCatcher","response","code","content","getUserData","console","log","useEffect","toast","Provider","signUp","signIn","logOut","push","updateUser","http","configFile","apiEndpoint","interceptors","request","use","isFireBase","containSlash","slice","now","grant_type","refresh_token","id_token","user_id","expires_in","accessToken","auth","Promise","reject","res","status","delete","professionService","req","ProfessionContext","useProfession","ProfessionProvider","professions","setProfessions","getProfessionsList","getProfession","find","prof","qualityService","QualitiesContex","useQualities","QualitiesProvider","qualities","setQualities","getQualities","getQuality","q","EditUserPage","profLoading","qualLoading","setData","setErrors","getOptions","o","transformData","elements","qualitiesArray","elem","qualy","qual","validatorConfig","isRequired","isEmail","isValid","onSubmit","e","preventDefault","profession","sex","defaultValue","values","UserCard","user","location","pathname","src","alt","width","role","Quality","color","QualitiesList","QualitiesCard","CompletedMeetingsCard","formatDate","param","monthNames","date","diff","getHours","getMinutes","getDate","getMonth","getFullYear","UserContext","useUser","UserProvider","users","setUsers","getUsers","getUserById","userId","u","Comment","created","created_at","onRemove","height","CommentsList","comments","comment","TextAreaField","rows","AddCommentForm","validatorConfog","commentEndpoint","commentService","createComment","getComments","pageId","orderBy","equalTo","removeComment","commentId","CommentsContext","CommentsProvider","useParams","setComments","nanoid","filter","c","Comments","sortedComments","UserPage","Pagination","itemsCount","pageSize","onPageChange","currentPage","pageCount","ceil","pages","_","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","SearchStatus","number","lastOne","Number","indexOf","renderPhrase","Bookmark","Qualities","TableHeader","onSort","selectedSort","columns","column","path","order","undefined","scope","currentPath","TableBody","renderContent","component","Table","Profession","UserTable","onToggleBookMark","to","bookmark","UsersListPage","professionsLoading","setCurrentPage","searchQuery","setSearchQuery","selectedProf","setSelectedProf","sortBy","setSortBy","filteredUsers","toLowerCase","JSON","stringify","count","usersCrop","pageNumber","startIndex","take","paginate","placeholder","onDelete","newArray","pageIndex","Users","edit","CheckBoxField","LoginForm","stayOn","isCapitalSymbol","isContainDigit","handleSubmit","RegisterForm","licence","qualitiesList","professionsList","p","newData","Login","formType","setFormType","toggleFormType","LogOut","useMockData","statusConsts","setStatus","progress","setProgress","setCount","summuryCount","incrementCount","newProgress","updateProgress","initialize","Main","NavProfile","isOpen","setOpen","NavBar","App","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc143daf.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n            case \"isRequired\": {\n                if (typeof data === \"boolean\") {\n                    statusValidate = !data;\n                } else {\n                    statusValidate = data.trim() === \"\";\n                }\n                break;\n            }\n            case \"isEmail\":\n                {\n                    const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n                    statusValidate = !emailRegExp.test(data);\n                }\n\n                break;\n            case \"isCapitalSymbol\":\n                {\n                    const capitalRegExp = /[A-Z]+/g;\n                    statusValidate = !capitalRegExp.test(data);\n                }\n\n                break;\n            case \"isContainDigit\":\n                {\n                    const digitRegExp = /\\d+/g;\n                    statusValidate = !digitRegExp.test(data);\n                }\n                break;\n            case \"min\":\n                statusValidate = data.length < config.value;\n                break;\n\n            default:\n                break;\n        }\n\n        if (statusValidate) return config.message;\n    }\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}>{label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    value={value}\n                    onChange={handleChange}\n                    name={name}\n                    className={getInputClasses()}\n                />\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback\">{error}</div>}\n            </div>\n        </div>\n    );\n};\n\nTextField.defaultProps = { type: \"text\" };\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextField;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SelectField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    defaultOption,\r\n    options,\r\n    error,\r\n    name\r\n}) => {\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    const getInputClasses = () => {\r\n        return \"form-select\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n    const optionsArray =\r\n        !Array.isArray(options) && typeof options === \"object\"\r\n            ? Object.keys(options).map((optionName) => ({\r\n                  name: options[optionName].name,\r\n                  value: options[optionName]._id\r\n              }))\r\n            : options;\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label htmlFor=\"validationCustom04\" className=\"form-label\">\r\n                {label}\r\n            </label>\r\n            <select\r\n                className={getInputClasses()}\r\n                name={name}\r\n                id=\"validationCustom04\"\r\n                required\r\n                onChange={handleChange}\r\n                value={value}\r\n            >\r\n                <option disabled value=\"\">\r\n                    {defaultOption}\r\n                </option>\r\n                {optionsArray &&\r\n                    optionsArray.map((option) => (\r\n                        <option value={option.value} key={option.value}>\r\n                            {option.label}\r\n                        </option>\r\n                    ))}\r\n            </select>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nSelectField.propTypes = {\r\n    label: PropTypes.string,\r\n    value: PropTypes.oneOfType([\r\n        PropTypes.object,\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]),\r\n    onChange: PropTypes.func,\r\n    defaultOption: PropTypes.string,\r\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    error: PropTypes.string,\r\n    name: PropTypes.string\r\n};\r\n\r\nexport default SelectField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst RadioField = ({ options, name, onChange, value, label }) => {\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label className=\"form-label\">{label}</label>\r\n            <div>\r\n                {options.map((option) => (\r\n                    <div\r\n                        key={option.name + \"_\" + option.value}\r\n                        className=\"form-check form-check-inline\"\r\n                    >\r\n                        <input\r\n                            className=\"form-check-input\"\r\n                            type=\"radio\"\r\n                            name={name}\r\n                            id={option.name + \"_\" + option.value}\r\n                            value={option.value}\r\n                            checked={option.value === value}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor={option.name + \"_\" + option.value}\r\n                        >\r\n                            {option.name}\r\n                        </label>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nRadioField.propTypes = {\r\n    name: PropTypes.string,\r\n    label: PropTypes.string,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    options: PropTypes.array\r\n};\r\n\r\nexport default RadioField;\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MultiSelectField = ({ options, onChange, name, label, selected }) => {\r\n    const optionsArray =\r\n        !Array.isArray(options) && typeof options === \"object\"\r\n            ? Object.keys(options).map((optionName) => ({\r\n                  label: options[optionName].name,\r\n                  value: options[optionName]._id\r\n              }))\r\n            : options;\r\n\r\n    const handleChange = (value) => {\r\n        onChange({ name: name, value });\r\n    };\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label className=\"form-label\">{label}</label>\r\n            <Select\r\n                closeMenuOnSelect={false}\r\n                isMulti\r\n                options={optionsArray}\r\n                className=\"basic-multi-select\"\r\n                classNamePrefix=\"select\"\r\n                onChange={handleChange}\r\n                name={name}\r\n                value={selected}\r\n            />\r\n        </div>\r\n    );\r\n};\r\nMultiSelectField.propTypes = {\r\n    onChange: PropTypes.func,\r\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    name: PropTypes.oneOfType([\r\n        PropTypes.object,\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]),\r\n    label: PropTypes.string,\r\n    selected: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\r\n};\r\n\r\nexport default MultiSelectField;\r\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\nconst BackHistoryButton = () => {\n    const history = useHistory();\n    return (\n        <button className=\"btn btn-primary\" onClick={() => history.goBack()}>\n            <i className=\"bi bi-caret-left\"></i>\n            Назад\n        </button>\n    );\n};\n\nexport default BackHistoryButton;\n","const TOKEN_KEY = \"jwt-token\";\r\nconst REFRESH_KEY = \"jwt-refresh-token\";\r\nconst EXPIRES_KEY = \"jwt-expires\";\r\nconst USERID_KEY = \"user-local-id\";\r\n\r\nexport function setTokens({\r\n    refreshToken,\r\n    idToken,\r\n    localId,\r\n    expiresIn = 3600\r\n}) {\r\n    const expiresDate = new Date().getTime() + expiresIn * 1000;\r\n    localStorage.setItem(USERID_KEY, localId);\r\n    localStorage.setItem(TOKEN_KEY, idToken);\r\n    localStorage.setItem(REFRESH_KEY, refreshToken);\r\n    localStorage.setItem(EXPIRES_KEY, expiresDate);\r\n}\r\n\r\nexport function getAccessToken() {\r\n    return localStorage.getItem(TOKEN_KEY);\r\n}\r\n\r\nexport function getRefreshToken() {\r\n    return localStorage.getItem(REFRESH_KEY);\r\n}\r\n\r\nexport function removeAuthData() {\r\n    localStorage.removeItem(USERID_KEY);\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    localStorage.removeItem(REFRESH_KEY);\r\n    localStorage.removeItem(EXPIRES_KEY);\r\n}\r\n\r\nexport function getTokenExpiresDate() {\r\n    return localStorage.getItem(EXPIRES_KEY);\r\n}\r\n\r\nexport function getUserId() {\r\n    return localStorage.getItem(USERID_KEY);\r\n}\r\n\r\nconst localStorageService = {\r\n    setTokens,\r\n    getAccessToken,\r\n    getRefreshToken,\r\n    getTokenExpiresDate,\r\n    getUserId,\r\n    removeAuthData\r\n};\r\n\r\nexport default localStorageService;\r\n","import httpService from \"./http.service\";\r\nimport localStorageService from \"./localStorage.service\";\r\n\r\nconst userEndPoint = \"user/\";\r\n\r\nconst userService = {\r\n    get: async () => {\r\n        const { data } = await httpService.get(userEndPoint);\r\n        return data;\r\n    },\r\n    create: async (payload) => {\r\n        const { data } = await httpService.put(\r\n            userEndPoint + payload._id,\r\n            payload\r\n        );\r\n        return data;\r\n    },\r\n    getCurrentUser: async () => {\r\n        const { data } = await httpService.get(\r\n            userEndPoint + localStorageService.getUserId()\r\n        );\r\n        return data;\r\n    }\r\n};\r\n\r\nexport default userService;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport userService from \"../services/user.service\";\r\nimport { toast } from \"react-toastify\";\r\nimport localStorageService, {\r\n    setTokens\r\n} from \"../services/localStorage.service\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const httpAuth = axios.create({\r\n    baseURL: \"https://identitytoolkit.googleapis.com/v1/\",\r\n    params: {\r\n        key: process.env.REACT_APP_FIREBASE_KEY\r\n    }\r\n});\r\nconst AuthContext = React.createContext();\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};\r\n\r\nconst AuthProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setLoading] = useState(true);\r\n    const history = useHistory();\r\n\r\n    function randomInt(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n\r\n    async function signUp({ email, password, ...rest }) {\r\n        const url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${process.env.REACT_APP_FIREBASE_KEY}`;\r\n        try {\r\n            const { data } = await httpAuth.post(url, {\r\n                email,\r\n                password,\r\n                returnSecureToken: true\r\n            });\r\n            setTokens(data);\r\n            await createUser({\r\n                _id: data.localId,\r\n                email,\r\n                rate: randomInt(1, 5),\r\n                completedMeetings: randomInt(0, 1000),\r\n                image: `https://avatars.dicebear.com/api/avataaars/${(\r\n                    Math.random() + 1\r\n                )\r\n                    .toString(36)\r\n                    .substring(7)}.svg`,\r\n                ...rest\r\n            });\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n            const { code, message } = error.response.data.error;\r\n            if (code === 400) {\r\n                if (message === \"EMAIL_EXISTS\") {\r\n                    const errorObject = {\r\n                        email: \"Пользователь с таким Email уже существует\"\r\n                    };\r\n                    throw errorObject;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    async function createUser(data) {\r\n        try {\r\n            const { content } = await userService.create(data);\r\n            setCurrentUser(content);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n\r\n    async function updateUser(data) {\r\n        try {\r\n            const { content } = await userService.create(data);\r\n            setCurrentUser(content);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n\r\n    async function signIn({ email, password }) {\r\n        const url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${process.env.REACT_APP_FIREBASE_KEY}`;\r\n        try {\r\n            const { data } = await httpAuth.post(url, {\r\n                email,\r\n                password,\r\n                returnSecureToken: true\r\n            });\r\n            setTokens(data);\r\n            await getUserData();\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n            const { code, message } = error.response.data.error;\r\n            console.log(code, message);\r\n            if (code === 400) {\r\n                if (message === \"INVALID_PASSWORD\") {\r\n                    const errorObject = {\r\n                        password: \"Введен неверный пароль. Попробуйте еще раз.\"\r\n                    };\r\n                    throw errorObject;\r\n                }\r\n            }\r\n            if (code === 400) {\r\n                if (message === \"EMAIL_NOT_FOUND\") {\r\n                    const errorObject = {\r\n                        email: \"Введен неверный Email. Попробуйте еще раз.\"\r\n                    };\r\n                    throw errorObject;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function errorCatcher(error) {\r\n        const { message } = error.response.data;\r\n        setError(message);\r\n    }\r\n    function logOut() {\r\n        localStorageService.removeAuthData();\r\n        setCurrentUser(null);\r\n        history.push(\"/\");\r\n    }\r\n\r\n    async function getUserData() {\r\n        try {\r\n            const { content } = await userService.getCurrentUser();\r\n            setCurrentUser(content);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localStorageService.getAccessToken()) {\r\n            getUserData();\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{ signUp, currentUser, signIn, logOut, updateUser }}\r\n        >\r\n            {!isLoading ? children : \"Loading\"}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nAuthProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n\r\nexport default AuthProvider;\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport configFile from \"../config.json\";\r\nimport { httpAuth } from \"../hooks/useAuth\";\r\nimport localStorageService from \"./localStorage.service\";\r\n\r\nconst http = axios.create({\r\n    baseURL: configFile.apiEndpoint\r\n});\r\nhttp.interceptors.request.use(\r\n    async function (config) {\r\n        if (configFile.isFireBase) {\r\n            const containSlash = /\\/$/gi.test(config.url);\r\n            config.url =\r\n                (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\r\n\r\n            const expiresDate = localStorageService.getTokenExpiresDate();\r\n            const refreshToken = localStorageService.getRefreshToken();\r\n            if (refreshToken && expiresDate < Date.now()) {\r\n                const { data } = await httpAuth.post(\"token\", {\r\n                    grant_type: \"refresh_token\",\r\n                    refresh_token: refreshToken\r\n                });\r\n                console.log(data);\r\n                localStorageService.setTokens({\r\n                    refreshToken: data.refresh_token,\r\n                    idToken: data.id_token,\r\n                    localId: data.user_id,\r\n                    expiresIn: data.expires_in\r\n                });\r\n            }\r\n            const accessToken = localStorageService.getAccessToken();\r\n            if (accessToken) {\r\n                config.params = { ...config.params, auth: accessToken };\r\n            }\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nfunction transformData(data) {\r\n    return data && !data._id\r\n        ? Object.keys(data).map((key) => ({\r\n              ...data[key]\r\n          }))\r\n        : data;\r\n}\r\nhttp.interceptors.response.use(\r\n    (res) => {\r\n        if (configFile.isFireBase) {\r\n            res.data = { content: transformData(res.data) };\r\n        }\r\n        return res;\r\n    },\r\n    function (error) {\r\n        const expectedErrors =\r\n            error.response &&\r\n            error.response.status >= 400 &&\r\n            error.response.status < 500;\r\n        if (!expectedErrors) {\r\n            console.log(error);\r\n            toast.error(\"Something was wrong. Try it later\");\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nconst httpService = {\r\n    get: http.get,\r\n    post: http.post,\r\n    put: http.put,\r\n    delete: http.delete\r\n};\r\n\r\nexport default httpService;\r\n","import httpService from \"./http.service\";\r\n\r\nconst professionEndPoint = \"profession/\";\r\n\r\nconst professionService = {\r\n    get: async () => {\r\n        const req = await httpService.get(professionEndPoint);\r\n        return req.data;\r\n    }\r\n};\r\n\r\nexport default professionService;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport professionService from \"../services/profession.service\";\r\nimport PropTypes from \"prop-types\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ProfessionContext = React.createContext();\r\n\r\nexport const useProfession = () => {\r\n    return useContext(ProfessionContext);\r\n};\r\n\r\nexport const ProfessionProvider = ({ children }) => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [professions, setProfessions] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getProfessionsList();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n\r\n    function errorCatcher(error) {\r\n        const { message } = error.response.data;\r\n        setError(message);\r\n        setLoading(false);\r\n    }\r\n\r\n    function getProfession(id) {\r\n        return professions.find((prof) => prof._id === id);\r\n    }\r\n\r\n    async function getProfessionsList() {\r\n        try {\r\n            const { content } = await professionService.get();\r\n            setProfessions(content);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ProfessionContext.Provider\r\n            value={{ isLoading, professions, getProfession }}\r\n        >\r\n            {children}\r\n        </ProfessionContext.Provider>\r\n    );\r\n};\r\n\r\nProfessionProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n","import httpService from \"./http.service\";\r\n\r\nconst qualityEndpoint = \"quality/\";\r\n\r\nconst qualityService = {\r\n    get: async () => {\r\n        const { data } = await httpService.get(qualityEndpoint);\r\n        return data;\r\n    }\r\n};\r\n\r\nexport default qualityService;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\nimport qualityService from \"../services/qualities.service\";\r\n\r\nconst QualitiesContex = React.createContext();\r\n\r\nexport const useQualities = () => {\r\n    return useContext(QualitiesContex);\r\n};\r\n\r\nexport const QualitiesProvider = ({ children }) => {\r\n    const [qualities, setQualities] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const getQualities = async () => {\r\n            try {\r\n                const { content } = await qualityService.get();\r\n                setQualities(content);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                errorCatcher(error);\r\n            }\r\n        };\r\n        getQualities();\r\n    }, []);\r\n    const getQuality = (id) => {\r\n        return qualities.find((q) => q._id === id);\r\n    };\r\n\r\n    function errorCatcher(error) {\r\n        const { message } = error.response.data;\r\n        setError(message);\r\n    }\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n\r\n    return (\r\n        <QualitiesContex.Provider\r\n            value={{\r\n                qualities,\r\n                getQuality,\r\n                isLoading\r\n            }}\r\n        >\r\n            {children}\r\n        </QualitiesContex.Provider>\r\n    );\r\n};\r\n\r\nQualitiesProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n","import EditUserPage from \"./editUserPage\";\r\nexport default EditUserPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { validator } from \"../../../utils/validator\";\r\nimport TextField from \"../../common/form/textField\";\r\nimport SelectField from \"../../common/form/selectField\";\r\nimport RadioField from \"../../common/form/radioField\";\r\nimport MultiSelectField from \"../../common/form/multiSelectField\";\r\nimport BackHistoryButton from \"../../common/backButton\";\r\nimport { useProfession } from \"../../../hooks/useProfession\";\r\nimport { useQualities } from \"../../../hooks/useQuality\";\r\nimport { useAuth } from \"../../../hooks/useAuth\";\r\n\r\nconst EditUserPage = () => {\r\n    const history = useHistory();\r\n    const { professions, isLoading: profLoading } = useProfession();\r\n    const { qualities, isLoading: qualLoading } = useQualities();\r\n    const { currentUser, updateUser } = useAuth();\r\n    const [data, setData] = useState(currentUser);\r\n    const [errors, setErrors] = useState({});\r\n    const getOptions = (options) => {\r\n        return options.map((o) => ({\r\n            label: o.name,\r\n            value: o._id\r\n        }));\r\n    };\r\n\r\n    const getQualities = (elements) => {\r\n        const qualitiesArray = [];\r\n        for (const elem of elements) {\r\n            for (const qualy in qualities) {\r\n                if (elem.value === qualities[qualy]._id) {\r\n                    qualitiesArray.push(qualities[qualy]);\r\n                }\r\n            }\r\n        }\r\n        return qualitiesArray;\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        updateUser({ ...data, qualities: data.qualities.map((q) => q.value) });\r\n        history.push(`/users/${currentUser._id}`);\r\n        console.log(data);\r\n    };\r\n\r\n    const transformData = (data) => {\r\n        return getQualities(data).map((qual) => ({\r\n            label: qual.name,\r\n            value: qual._id\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (currentUser && !data && !profLoading && !qualLoading) {\r\n            setData({\r\n                ...currentUser,\r\n                qualities: transformData(currentUser.qualities)\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const validatorConfig = {\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            },\r\n            isEmail: {\r\n                message: \"Email введен некорректно\"\r\n            }\r\n        },\r\n\r\n        name: {\r\n            isRequired: {\r\n                message: \"Введите ваше имя\"\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => validate(), [data]);\r\n\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <BackHistoryButton />\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n                    {Object.keys(professions).length > 0 ? (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <TextField\r\n                                label=\"Имя\"\r\n                                name=\"name\"\r\n                                value={data.name}\r\n                                onChange={handleChange}\r\n                                error={errors.name}\r\n                            />\r\n                            <TextField\r\n                                label=\"Электронная почта\"\r\n                                name=\"email\"\r\n                                value={data.email}\r\n                                onChange={handleChange}\r\n                                error={errors.email}\r\n                            />\r\n                            <SelectField\r\n                                label=\"Выбери свою профессию\"\r\n                                defaultOption=\"Choose...\"\r\n                                name=\"profession\"\r\n                                options={getOptions(professions)}\r\n                                onChange={handleChange}\r\n                                value={data.profession}\r\n                                error={errors.profession}\r\n                            />\r\n                            <RadioField\r\n                                options={[\r\n                                    { name: \"Male\", value: \"male\" },\r\n                                    { name: \"Female\", value: \"female\" },\r\n                                    { name: \"Other\", value: \"other\" }\r\n                                ]}\r\n                                value={data.sex}\r\n                                name=\"sex\"\r\n                                onChange={handleChange}\r\n                                label=\"Выберите ваш пол\"\r\n                            />\r\n                            <MultiSelectField\r\n                                defaultValue={data.qualities}\r\n                                options={getOptions(qualities)}\r\n                                onChange={handleChange}\r\n                                values\r\n                                name=\"qualities\"\r\n                                label=\"Выберите ваши качества\"\r\n                            />\r\n                            <button\r\n                                type=\"submit\"\r\n                                disabled={!isValid}\r\n                                className=\"btn btn-primary w-100 mx-auto\"\r\n                            >\r\n                                Обновить\r\n                            </button>\r\n                        </form>\r\n                    ) : (\r\n                        \"Loading...\"\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditUserPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst UserCard = ({ user }) => {\r\n    const history = useHistory();\r\n    const handleClick = () => {\r\n        history.push(history.location.pathname + \"/edit\");\r\n    };\r\n    const { currentUser } = useAuth();\r\n    console.log(currentUser);\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                {currentUser._id === user._id && (\r\n                    <button\r\n                        className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\r\n                        onClick={handleClick}\r\n                    >\r\n                        <i className=\"bi bi-gear\"></i>\r\n                    </button>\r\n                )}\r\n\r\n                <div\r\n                    className=\"d-flex\r\n                                    flex-column\r\n                                    align-items-center\r\n                                    text-center\r\n                                    position-relative\"\r\n                >\r\n                    <img\r\n                        src={user.image}\r\n                        className=\"rounded-circle shadow-1-strong me-3\"\r\n                        alt=\"avatar\"\r\n                        width=\"150\"\r\n                    />\r\n                    <h2>{user.name}</h2>\r\n                    <h3>Профессия: {user.profession.name}</h3>\r\n                    <div className=\"text-muted\">\r\n                        <i\r\n                            className=\"bi bi-caret-down-fill text-primary\"\r\n                            role=\"button\"\r\n                        ></i>\r\n                        <i\r\n                            className=\"bi bi-caret-up text-secondary\"\r\n                            role=\"button\"\r\n                        ></i>\r\n                        <span className=\"ms-2\">{user.rate}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nUserCard.propTypes = {\r\n    user: PropTypes.object,\r\n    id: PropTypes.string\r\n};\r\n\r\nexport default UserCard;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useQualities } from \"../../../hooks/useQuality\";\nconst Quality = ({ id }) => {\n    const { getQuality } = useQualities();\n    const { _id, color, name } = getQuality(id);\n    return (\n        <span className={\"badge m-1 bg-\" + color} key={_id}>\n            {name}\n        </span>\n    );\n};\nQuality.propTypes = {\n    id: PropTypes.string.isRequired\n};\n\nexport default Quality;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"./qualitie\";\nimport { useQualities } from \"../../../hooks/useQuality\";\n\nconst QualitiesList = ({ qualities }) => {\n    const { isLoading } = useQualities();\n    if (isLoading) return \"Loadind ...\";\n    return (\n        <>\n            {qualities.map((qual) => (\n                <Quality key={qual} id={qual} />\n            ))}\n        </>\n    );\n};\n\nQualitiesList.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n","import React from \"react\";\r\nimport QualitiesList from \"./qualities/qualitiesList\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst QualitiesCard = ({ data }) => {\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div\r\n                className=\"\r\n                                card-body\r\n                                d-flex\r\n                                flex-column\r\n                                justify-content-center\r\n                                text-center\r\n                            \"\r\n            >\r\n                <h5 className=\"card-title\">\r\n                    <span>Qualities</span>\r\n                </h5>\r\n                <p>\r\n                    <QualitiesList qualities={data} />\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nQualitiesCard.propTypes = {\r\n    data: PropTypes.array\r\n};\r\n\r\nexport default QualitiesCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CompletedMeetingsCard = ({ value }) => {\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div\r\n                className=\"\r\n                                    card-body\r\n                                    d-flex\r\n                                    flex-column\r\n                                    justify-content-center\r\n                                    text-center\r\n                                \"\r\n            >\r\n                <h5 className=\"card-title\">\r\n                    <span>Completed meetings</span>\r\n                </h5>\r\n                <h1 className=\"display-1\">{value}</h1>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nCompletedMeetingsCard.propTypes = {\r\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n};\r\n\r\nexport default CompletedMeetingsCard;\r\n","export function formatDate(param) {\r\n    const monthNames = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\"\r\n    ];\r\n    const date = new Date(param);\r\n    const dateToday = Date.now();\r\n    const diff = dateToday - +date;\r\n    if (diff / 60000 <= 1) {\r\n        return \"1 минуту назад\";\r\n    } else if (diff / 60000 <= 5) {\r\n        return \"5 минут назад\";\r\n    } else if (diff / 60000 <= 10) {\r\n        return \"10 минут назад\";\r\n    } else if (diff / 60000 <= 30) {\r\n        return \"30 минут назад\";\r\n    } else if (diff / 60000 <= 1440) {\r\n        return `${date.getHours()} : ${date.getMinutes()}`;\r\n    } else if (diff / 60000 <= 1440 * 365) {\r\n        return `${date.getDate()} ${monthNames[date.getMonth()]}`;\r\n    } else if (diff / 60000 > 1440 * 365) {\r\n        return `${date.getDate()} ${\r\n            monthNames[date.getMonth()]\r\n        } ${date.getFullYear()}`;\r\n    }\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport userService from \"../services/user.service\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport const useUser = () => {\r\n    return useContext(UserContext);\r\n};\r\n\r\nconst UserProvider = ({ children }) => {\r\n    const [users, setUsers] = useState([]);\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, []);\r\n    async function getUsers() {\r\n        try {\r\n            const { content } = await userService.get();\r\n            setUsers(content);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n    function errorCatcher(error) {\r\n        const { message } = error.response.data;\r\n\r\n        setError(message);\r\n    }\r\n    function getUserById(userId) {\r\n        return users.find((u) => u._id === userId);\r\n    }\r\n    return (\r\n        <UserContext.Provider value={{ users, getUserById }}>\r\n            {!isLoading ? children : \"Loading....\"}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n\r\nUserProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n\r\nexport default UserProvider;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatDate } from \"../../../utils/formatDate\";\r\nimport { useUser } from \"../../../hooks/useUsers\";\r\nimport { useAuth } from \"../../../hooks/useAuth\";\r\n\r\nconst Comment = ({\r\n    content,\r\n    created_at: created,\r\n    _id: id,\r\n    userId,\r\n    onRemove\r\n}) => {\r\n    const { getUserById } = useUser();\r\n    const { currentUser } = useAuth();\r\n    const user = getUserById(userId);\r\n\r\n    return (\r\n        <div className=\"bg-light card-body  mb-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"d-flex flex-start \">\r\n                        <img\r\n                            src={user.image}\r\n                            className=\"rounded-circle shadow-1-strong me-3\"\r\n                            alt=\"avatar\"\r\n                            width=\"65\"\r\n                            height=\"65\"\r\n                        />\r\n                        <div className=\"flex-grow-1 flex-shrink-1\">\r\n                            <div className=\"mb-4\">\r\n                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                    <p className=\"mb-1 \">\r\n                                        {user && user.name}{\" \"}\r\n                                        <span className=\"small\">\r\n                                            - {formatDate(created)}\r\n                                        </span>\r\n                                    </p>\r\n                                    {currentUser._id === userId && (\r\n                                        <button\r\n                                            className=\"btn btn-sm text-primary d-flex align-items-center\"\r\n                                            onClick={() => onRemove(id)}\r\n                                        >\r\n                                            <i className=\"bi bi-x-lg\"></i>\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n                                <p className=\"small mb-0\">{content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nComment.propTypes = {\r\n    content: PropTypes.string,\r\n    edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    userId: PropTypes.string,\r\n    onRemove: PropTypes.func,\r\n    _id: PropTypes.string\r\n};\r\n\r\nexport default Comment;\r\n","import React from \"react\";\r\n\r\nimport Comment from \"./comment\";\r\nimport PropTypes from \"prop-types\";\r\nconst CommentsList = ({ comments, onRemove }) => {\r\n    return comments.map((comment) => (\r\n        <Comment key={comment._id} {...comment} onRemove={onRemove} />\r\n    ));\r\n};\r\nCommentsList.propTypes = {\r\n    comment: PropTypes.array,\r\n    onRemove: PropTypes.func\r\n};\r\n\r\nexport default CommentsList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextAreaField = ({ label, error, onChange, name, value }) => {\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    const getInputClasses = () => {\r\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\r\n                {label}\r\n            </label>\r\n            <textarea\r\n                onChange={handleChange}\r\n                className={getInputClasses()}\r\n                name={name}\r\n                rows=\"3\"\r\n                value={value}\r\n            >\r\n                {}\r\n            </textarea>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextAreaField.propTypes = {\r\n    label: PropTypes.string,\r\n    error: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    name: PropTypes.string,\r\n    value: PropTypes.string\r\n};\r\n\r\nexport default TextAreaField;\r\n","import React, { useState } from \"react\";\r\nimport TextAreaField from \"../common/form/textAreaField\";\r\nimport { validator } from \"../../utils/validator\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCommentForm = ({ onSubmit }) => {\r\n    const [data, setData] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const validatorConfog = {\r\n        content: {\r\n            isRequired: {\r\n                message: \"Сообщение не может быть пустым\"\r\n            }\r\n        }\r\n    };\r\n\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfog);\r\n\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const clearForm = () => {\r\n        setData({});\r\n        setErrors({});\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        onSubmit(data);\r\n        clearForm();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>New comment</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <TextAreaField\r\n                    value={data.content || \"\"}\r\n                    onChange={handleChange}\r\n                    name=\"content\"\r\n                    label=\"Сообщение\"\r\n                    error={errors.content}\r\n                />\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <button className=\"btn btn-primary\">Опубликовать</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\nAddCommentForm.propTypes = {\r\n    onSubmit: PropTypes.func\r\n};\r\n\r\nexport default AddCommentForm;\r\n","import httpService from \"./http.service\";\r\n\r\nconst commentEndpoint = \"comment/\";\r\n\r\nconst commentService = {\r\n    createComment: async (payload) => {\r\n        const { data } = await httpService.put(\r\n            commentEndpoint + payload._id,\r\n            payload\r\n        );\r\n        return data;\r\n    },\r\n    getComments: async (pageId) => {\r\n        const { data } = await httpService.get(commentEndpoint, {\r\n            params: {\r\n                orderBy: '\"pageId\"',\r\n                equalTo: `\"${pageId}\"`\r\n            }\r\n        });\r\n        return data;\r\n    },\r\n    removeComment: async (commentId) => {\r\n        const { data } = await httpService.delete(commentEndpoint + commentId);\r\n        return data;\r\n    }\r\n};\r\n\r\nexport default commentService;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useParams } from \"react-router\";\r\nimport { useAuth } from \"./useAuth\";\r\nimport { nanoid } from \"nanoid\";\r\nimport commentService from \"../services/comment.service\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst CommentsContext = React.createContext();\r\n\r\nexport const useComments = () => {\r\n    return useContext(CommentsContext);\r\n};\r\n\r\nexport const CommentsProvider = ({ children }) => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const { userId } = useParams();\r\n    const { currentUser } = useAuth();\r\n    const [comments, setComments] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    useEffect(() => {\r\n        getComments();\r\n    }, [userId]);\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n    function errorCatcher(error) {\r\n        const { message } = error.response.data;\r\n        setError(message);\r\n        setLoading(false);\r\n    }\r\n\r\n    async function createComment(data) {\r\n        const comment = {\r\n            ...data,\r\n            _id: nanoid(),\r\n            pageId: userId,\r\n            created_at: Date.now(),\r\n            userId: currentUser._id\r\n        };\r\n\r\n        try {\r\n            const { content } = await commentService.createComment(comment);\r\n            setComments((prevState) => [...prevState, content]);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n\r\n    async function getComments() {\r\n        try {\r\n            const { content } = await commentService.getComments(userId);\r\n            setComments(content);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    async function removeComment(id) {\r\n        try {\r\n            const { content } = await commentService.removeComment(id);\r\n            if (content === null) {\r\n                setComments((prevState) =>\r\n                    prevState.filter((c) => c._id !== id)\r\n                );\r\n            }\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CommentsContext.Provider\r\n            value={{ comments, createComment, isLoading, removeComment }}\r\n        >\r\n            {children}\r\n        </CommentsContext.Provider>\r\n    );\r\n};\r\n\r\nCommentsProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n","import { orderBy } from \"lodash\";\r\nimport React from \"react\";\r\nimport CommentsList from \"../common/comments/commentList\";\r\nimport AddCommentForm from \"./addCommentForm\";\r\nimport { useComments } from \"../../hooks/useComments\";\r\n\r\nconst Comments = () => {\r\n    const { createComment, comments, removeComment } = useComments();\r\n\r\n    const handleSubmit = (data) => {\r\n        createComment(data);\r\n        // api.comments\r\n        //     .add({ ...data, pageId: userId })\r\n        //     .then((data) => setComments([...comments, data]));\r\n    };\r\n    const handleRemoveComment = (id) => {\r\n        removeComment(id);\r\n        // api.comments.remove(id).then((id) => {\r\n        //     setComments(comments.filter((x) => x._id !== id));\r\n        // });\r\n    };\r\n    const sortedComments = orderBy(comments, [\"created_at\"], [\"desc\"]);\r\n    return (\r\n        <>\r\n            <div className=\"card mb-2\">\r\n                {\" \"}\r\n                <div className=\"card-body \">\r\n                    <AddCommentForm onSubmit={handleSubmit} />\r\n                </div>\r\n            </div>\r\n            {sortedComments.length > 0 && (\r\n                <div className=\"card mb-3\">\r\n                    <div className=\"card-body \">\r\n                        <h2>Comments</h2>\r\n                        <hr />\r\n                        <CommentsList\r\n                            comments={sortedComments}\r\n                            onRemove={handleRemoveComment}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Comments;\r\n","import UserPage from \"./userPage\";\nexport default UserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport UserCard from \"../../ui/userCard\";\nimport QualitiesCard from \"../../ui/qualitiesCard\";\nimport CompletedMeetingsCard from \"../../ui/completedMeetingsCard\";\nimport Comments from \"../../ui/comments\";\nimport { useUser } from \"../../../hooks/useUsers\";\nimport { CommentsProvider } from \"../../../hooks/useComments\";\n\nconst UserPage = ({ userId }) => {\n    const { getUserById } = useUser();\n    const user = getUserById(userId);\n    console.log(userId);\n\n    if (user) {\n        return (\n            <div className=\"container\">\n                <div className=\"row gutters-sm\">\n                    <div className=\"col-md-4 mb-3\">\n                        <UserCard user={user} />\n                        <QualitiesCard data={user.qualities} />\n                        <CompletedMeetingsCard value={user.completedMeetings} />\n                    </div>\n                    <div className=\"col-md-8\">\n                        <CommentsProvider>\n                            <Comments />\n                        </CommentsProvider>\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return <h1>Loading</h1>;\n    }\n};\n\nUserPage.propTypes = {\n    userId: PropTypes.string.isRequired\n};\n\nexport default UserPage;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pageCount = Math.ceil(itemsCount / pageSize);\n    if (pageCount === 1) return null;\n\n    const pages = _.range(1, pageCount + 1);\n\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        className={\n                            \"page-item \" +\n                            (page === currentPage ? \"active\" : \"\")\n                        }\n                        key={page}\n                    >\n                        <a\n                            className=\"page-link\"\n                            onClick={() => onPageChange(page)}\n                        >\n                            {page}\n                        </a>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\n\nPagination.propTypes = {\n    itemsCount: PropTypes.number,\n    pageSize: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}) => {\n    if (!Array.isArray(items)) {\n        return (\n            <ul className=\"list-group\">\n                {Object.keys(items).map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            \"list-group-item\" +\n                            (items[item] === selectedItem ? \" active\" : \"\")\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n    return (\n        <ul className=\"list-group\">\n            {items.map((item) => (\n                <li\n                    key={item[valueProperty]}\n                    className={\n                        \"list-group-item\" +\n                        (item === selectedItem ? \" active\" : \"\")\n                    }\n                    onClick={() => onItemSelect(item)}\n                    role=\"button\"\n                >\n                    {item[contentProperty]}\n                </li>\n            ))}\n        </ul>\n    );\n};\nGroupList.defaultProps = {\n    valueProperty: \"_id\",\n    contentProperty: \"name\"\n};\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst SearchStatus = ({ length }) => {\n    const renderPhrase = (number) => {\n        const lastOne = Number(number.toString().slice(-1));\n        if (number > 4 && number < 15) {\n            return \"человек тусанет\";\n        }\n        if (lastOne === 1) return \"человек тусанет\";\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека тусанут\";\n        return \"человек тусанет\";\n    };\n    return (\n        <h2>\n            <span\n                className={\"badge \" + (length > 0 ? \"bg-primary\" : \"bg-danger\")}\n            >\n                {length > 0\n                    ? `${length + \" \" + renderPhrase(length)}   с тобой сегодня`\n                    : \"Никто с тобой не тусанет\"}\n            </span>\n        </h2>\n    );\n};\nSearchStatus.propTypes = {\n    length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst Bookmark = ({ status, ...rest }) => {\n    return (\n        <button {...rest}>\n            <i className={\"bi bi-bookmark\" + (status ? \"-heart-fill\" : \"\")}></i>\n        </button>\n    );\n};\nBookmark.propTypes = {\n    status: PropTypes.bool\n};\n\nexport default Bookmark;\n","import Qualities from \"./qualitiesList\";\nexport default Qualities;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const caretDirection = (currentPath) => {\n        if (selectedSort.path === currentPath) {\n            if (selectedSort.order === \"asc\") {\n                return <i className=\"bi bi-caret-up-fill\"></i>;\n            } else return <i className=\"bi bi-caret-down-fill\"></i>;\n        }\n        return null;\n    };\n\n    const handleSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({\n                ...selectedSort,\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n            });\n        } else {\n            onSort({ path: item, order: \"asc\" });\n        }\n    };\n    return (\n        <thead>\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handleSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && \"button\" }}\n                        scope=\"col\"\n                    >\n                        {columns[column].name}\n                        {caretDirection(columns[column].path)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\n\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === \"function\") {\n                return component(item);\n            }\n            return component;\n        }\n        return _.get(item, columns[column].path);\n    };\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item._id}>\n                    {Object.keys(columns).map((column) => (\n                        <td key={column}>{renderContent(item, column)}</td>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\nexport default Table;\nexport { TableBody, TableHeader };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n    return (\n        <table className=\"table\">\n            {children || (\n                <>\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\n                    <TableBody {...{ columns, data }} />\n                </>\n            )}\n        </table>\n    );\n};\n\nTable.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired,\n    data: PropTypes.array.isRequired,\n    children: PropTypes.array\n};\n\nexport default Table;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useProfession } from \"../../hooks/useProfession\";\r\n\r\nconst Profession = ({ id }) => {\r\n    const { isLoading, getProfession } = useProfession();\r\n    const profession = getProfession(id);\r\n    if (!isLoading) {\r\n        return <p>{profession.name}</p>;\r\n    } else return \"Loading...\";\r\n};\r\n\r\nProfession.propTypes = {\r\n    id: PropTypes.string\r\n};\r\n\r\nexport default Profession;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport BookMark from \"../common/bookmark\";\nimport Qualities from \"./qualities\";\nimport Table from \"../common/table\";\nimport { Link } from \"react-router-dom\";\nimport Profession from \"./profession\";\n\nconst UserTable = ({\n    users,\n    onSort,\n    selectedSort,\n    onToggleBookMark,\n    ...rest\n}) => {\n    const columns = {\n        name: {\n            path: \"name\",\n            name: \"Имя\",\n            component: (user) => (\n                <Link to={`/users/${user._id}`}>{user.name}</Link>\n            )\n        },\n        qualities: {\n            name: \"Качества\",\n            component: (user) => <Qualities qualities={user.qualities} />\n        },\n        professions: {\n            name: \"Профессия\",\n            component: (user) => <Profession id={user.profession} />\n        },\n        completedMeetings: {\n            path: \"completedMeetings\",\n            name: \"Встретился, раз\"\n        },\n        rate: { path: \"rate\", name: \"Оценка\" },\n        bookmark: {\n            path: \"bookmark\",\n            name: \"Избранное\",\n            component: (user) => (\n                <BookMark\n                    status={user.bookmark}\n                    onClick={() => onToggleBookMark(user._id)}\n                />\n            )\n        }\n    };\n    return (\n        <Table\n            onSort={onSort}\n            selectedSort={selectedSort}\n            columns={columns}\n            data={users}\n        />\n    );\n};\n\nUserTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    onToggleBookMark: PropTypes.func.isRequired\n};\n\nexport default UserTable;\n","import UsersListPage from \"./usersListPage\";\nexport default UsersListPage;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../../../utils/paginate\";\nimport Pagination from \"../../common/pagination\";\nimport GroupList from \"../../common/groupList\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UserTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\nimport { useUser } from \"../../../hooks/useUsers\";\nimport { useProfession } from \"../../../hooks/useProfession\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nconst UsersListPage = () => {\n    const { users } = useUser();\n    const { currentUser } = useAuth();\n    const { isLoading: professionsLoading, professions } = useProfession();\n    const [currentPage, setCurrentPage] = useState(1);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [selectedProf, setSelectedProf] = useState();\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n    const pageSize = 8;\n\n    const handleDelete = (userId) => {\n        console.log(\"delete user\");\n        // setUsers(users.filter((user) => user._id !== userId));\n    };\n    const handleToggleBookMark = (id) => {\n        const newArray = users.map((user) => {\n            if (user._id === id) {\n                return { ...user, bookmark: !user.bookmark };\n            }\n            return user;\n        });\n        // setUsers(newArray);\n        console.log(newArray);\n    };\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [selectedProf, searchQuery]);\n\n    const handleProfessionSelect = (item) => {\n        if (searchQuery !== \"\") setSearchQuery(\"\");\n        setSelectedProf(item);\n    };\n    const handleSearchQuery = ({ target }) => {\n        setSelectedProf(undefined);\n        setSearchQuery(target.value);\n    };\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n\n    function filterUsers(data) {\n        const filteredUsers = searchQuery\n            ? data.filter(\n                  (user) =>\n                      user.name\n                          .toLowerCase()\n                          .indexOf(searchQuery.toLowerCase()) !== -1\n              )\n            : selectedProf\n            ? data.filter(\n                  (user) =>\n                      JSON.stringify(user.profession) ===\n                      JSON.stringify(selectedProf)\n              )\n            : data;\n        return filteredUsers.filter((u) => u._id !== currentUser._id);\n    }\n    const filteredUsers = filterUsers(users);\n\n    const count = filteredUsers.length;\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]);\n    const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n    const clearFilter = () => {\n        setSelectedProf();\n    };\n    console.log(professions);\n\n    return (\n        <div className=\"d-flex\">\n            {professions && !professionsLoading && (\n                <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n                    <GroupList\n                        selectedItem={selectedProf}\n                        items={professions}\n                        onItemSelect={handleProfessionSelect}\n                    />\n                    <button\n                        className=\"btn btn-secondary mt-2\"\n                        onClick={clearFilter}\n                    >\n                        Очиститть\n                    </button>\n                </div>\n            )}\n            <div className=\"d-flex flex-column\">\n                <SearchStatus length={count} />\n                <input\n                    type=\"text\"\n                    name=\"searchQuery\"\n                    placeholder=\"Search...\"\n                    onChange={handleSearchQuery}\n                    value={searchQuery}\n                />\n                {count > 0 && (\n                    <UserTable\n                        users={usersCrop}\n                        onSort={handleSort}\n                        selectedSort={sortBy}\n                        onDelete={handleDelete}\n                        onToggleBookMark={handleToggleBookMark}\n                    />\n                )}\n                <div className=\"d-flex justify-content-center\">\n                    <Pagination\n                        itemsCount={count}\n                        pageSize={pageSize}\n                        currentPage={currentPage}\n                        onPageChange={handlePageChange}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\nUsersListPage.propTypes = {\n    users: PropTypes.array\n};\n\nexport default UsersListPage;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n\n    return _(items).slice(startIndex).take(pageSize).value();\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport EditUserPage from \"../page/editUserPage\";\nimport UserPage from \"../page/userPage\";\nimport UsersListPage from \"../page/usersListPage\";\nimport UserProvider from \"../../hooks/useUsers\";\nconst Users = () => {\n    const params = useParams();\n    const { userId, edit } = params;\n    return (\n        <>\n            <UserProvider>\n                {userId ? (\n                    edit ? (\n                        <EditUserPage />\n                    ) : (\n                        <UserPage userId={userId} />\n                    )\n                ) : (\n                    <UsersListPage />\n                )}\n            </UserProvider>\n        </>\n    );\n};\n\nexport default Users;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\r\n    const handleChange = () => {\r\n        onChange({ name: name, value: !value });\r\n    };\r\n    const getInputClasses = () => {\r\n        return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n    return (\r\n        <div className=\"form-check mb-4\">\r\n            <input\r\n                className={getInputClasses()}\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                id={name}\r\n                onChange={handleChange}\r\n                checked={value}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor={name}>\r\n                {children}\r\n            </label>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\nCheckBoxField.propTypes = {\r\n    name: PropTypes.string,\r\n    value: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n    error: PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n\r\nexport default CheckBoxField;\r\n","import React, { useEffect, useState } from \"react\";\nimport TextField from \"../common/form/textField\";\nimport { validator } from \"../../utils/validator\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst LoginForm = () => {\n    const history = useHistory();\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        stayOn: false\n    });\n    const [errors, setErrors] = useState({});\n    const { signIn } = useAuth();\n\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: { message: \"Email введен не корректно\" }\n        },\n        password: {\n            isRequired: { message: \"Пароль обязателен для заполнения\" },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одну цифру\"\n            },\n            min: { message: \"Пароль должен быть не менее 8 символов\", value: 8 }\n        }\n    };\n\n    useEffect(() => {\n        validate();\n    }, [data]);\n\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const isValid = validate();\n        if (!isValid) return;\n\n        signIn(data);\n        console.log(data);\n        console.log(e);\n\n        try {\n            await signIn(data);\n            history.push(\"/\");\n        } catch (error) {\n            setErrors(error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                value={data.email}\n                onChange={handleChange}\n                name=\"email\"\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <CheckBoxField\n                value={data.stayOn}\n                onChange={handleChange}\n                name=\"stayOn\"\n            >\n                Оставаться в системе\n            </CheckBoxField>\n            <button\n                type=\"submit\"\n                disabled={!isValid}\n                className=\"btn btn-secondary w-100 mx-auto\"\n            >\n                Отправить\n            </button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n","import React, { useEffect, useState } from \"react\";\n\nimport TextField from \"../common/form/textField\";\nimport { validator } from \"../../utils/validator\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useQualities } from \"../../hooks/useQuality\";\nimport { useProfession } from \"../../hooks/useProfession\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst RegisterForm = () => {\n    const history = useHistory();\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"Male\",\n        name: \"\",\n        qualities: [],\n        licence: false\n    });\n    const { signUp } = useAuth();\n    const [errors, setErrors] = useState({});\n    const { qualities } = useQualities();\n    const { professions } = useProfession();\n    const qualitiesList = qualities.map((q) => ({\n        label: q.name,\n        value: q._id\n    }));\n    const professionsList = professions.map((p) => ({\n        label: p.name,\n        value: p._id\n    }));\n\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: { message: \"Email введен не корректно\" }\n        },\n        name: {\n            isRequired: {\n                message: \"Имя обязательно для заполнения\"\n            },\n            min: { message: \"Имя должно быть не менее 2 символов\", value: 2 }\n        },\n        password: {\n            isRequired: { message: \"Пароль обязателен для заполнения\" },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одну цифру\"\n            },\n            min: { message: \"Пароль должен быть не менее 8 символов\", value: 8 }\n        },\n        profession: {\n            isRequired: {\n                message: \"Обязательно выберите вашу профессию\"\n            }\n        },\n        licence: {\n            isRequired: {\n                message:\n                    \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\n            }\n        }\n    };\n\n    useEffect(() => {\n        validate();\n    }, [data]);\n\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const isValid = validate();\n        if (!isValid) return;\n\n        const newData = {\n            ...data,\n            qualities: data.qualities.map((q) => q.value)\n        };\n\n        try {\n            await signUp(newData);\n            history.push(\"/\");\n        } catch (error) {\n            setErrors(error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                value={data.email}\n                onChange={handleChange}\n                name=\"email\"\n                error={errors.email}\n            />\n            <TextField\n                label=\"Имя\"\n                value={data.name}\n                onChange={handleChange}\n                name=\"name\"\n                error={errors.name}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <SelectField\n                onChange={handleChange}\n                options={professionsList}\n                defaultOption=\"Choose...\"\n                error={errors.profession}\n                value={data.profession}\n                label=\"Выберите вашу профессию\"\n                name=\"profession\"\n            />\n            <RadioField\n                options={[\n                    { name: \"Male\", value: \"male\" },\n                    { name: \"Female\", value: \"female\" },\n                    { name: \"Other\", value: \"other\" }\n                ]}\n                value={data.sex}\n                name=\"sex\"\n                onChange={handleChange}\n                label=\"Выберите ваш пол \"\n            />\n            <MultiSelectField\n                options={qualitiesList}\n                onChange={handleChange}\n                name=\"qualities\"\n                label=\"Выберите ваши качества\"\n            />\n            <CheckBoxField\n                value={data.licence}\n                onChange={handleChange}\n                name=\"licence\"\n                error={errors.licence}\n            >\n                Подтвердить <a>лицензионное соглашение</a>\n            </CheckBoxField>\n\n            <button\n                type=\"submit\"\n                disabled={!isValid}\n                className=\"btn btn-secondary w-100 mx-auto\"\n            >\n                Отправить\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport LoginForm from \"../ui/loginForm\";\nimport RegisterForm from \"../ui/registerForm\";\n\nconst Login = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"register\" ? type : \"login\"\n    );\n    const toggleFormType = (params) => {\n        setFormType((prevState) =>\n            prevState === \"register\" ? \"login\" : \"register\"\n        );\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {formType === \"register\" ? (\n                        <>\n                            <h3 className=\"mb-4\">Регистрация</h3>\n                            <RegisterForm />\n                            <p>\n                                Already have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    Sign In\n                                </a>\n                            </p>\n                        </>\n                    ) : (\n                        <>\n                            <h3 className=\"mb-4\">Вход</h3>\n                            <LoginForm />\n                            <p>\n                                Don`t have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    Sign Up\n                                </a>\n                            </p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","import React, { useEffect } from \"react\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\n\r\nconst LogOut = () => {\r\n    const { logOut } = useAuth();\r\n    useEffect(() => {\r\n        logOut();\r\n    }, []);\r\n    return <h1>Loading...</h1>;\r\n};\r\n\r\nexport default LogOut;\r\n","import { useEffect, useState } from \"react\";\r\nimport professions from \"../mockData/professions.json\";\r\nimport qualities from \"../mockData/qualities.json\";\r\nimport users from \"../mockData/users.json\";\r\nimport httpService from \"../services/http.service\";\r\n\r\nconst useMockData = () => {\r\n    const statusConsts = {\r\n        idle: \"Not Started\",\r\n        pending: \"In Process\",\r\n        successed: \"Ready\",\r\n        error: \"Error occured\"\r\n    };\r\n    const [error, setError] = useState(null);\r\n    const [status, setStatus] = useState(statusConsts.idle);\r\n    const [progress, setProgress] = useState(0);\r\n    const [count, setCount] = useState(0);\r\n    const summuryCount = professions.length + qualities.length + users.length;\r\n    const incrementCount = () => {\r\n        setCount((prevState) => prevState + 1);\r\n    };\r\n    const updateProgress = () => {\r\n        if (count !== 0 && status === statusConsts.idle) {\r\n            setStatus(statusConsts.pending);\r\n        }\r\n        const newProgress = Math.floor((count / summuryCount) * 100);\r\n        if (progress < newProgress) {\r\n            setProgress(() => newProgress);\r\n        }\r\n        if (newProgress === 100) {\r\n            setStatus(statusConsts.successed);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateProgress();\r\n    }, [count]);\r\n    async function initialize() {\r\n        try {\r\n            for (const prof of professions) {\r\n                await httpService.put(\"profession/\" + prof._id, prof);\r\n                incrementCount();\r\n            }\r\n            for (const user of users) {\r\n                await httpService.put(\"user/\" + user._id, user);\r\n                incrementCount();\r\n            }\r\n            for (const qual of qualities) {\r\n                await httpService.put(\"quality/\" + qual._id, qual);\r\n                incrementCount();\r\n            }\r\n        } catch (error) {\r\n            setError(error);\r\n            setStatus(statusConsts.error);\r\n        }\r\n    }\r\n\r\n    return { error, initialize, progress, status };\r\n};\r\n\r\nexport default useMockData;\r\n","import React from \"react\";\nimport useMockData from \"../../utils/mockData\";\n\nconst Main = () => {\n    const { error, initialize, progress, status } = useMockData();\n    const handleClick = () => {\n        console.log(\"clicked\");\n        initialize();\n    };\n    return (\n        <div className=\"container mt-5\">\n            <h1>Main</h1>\n            <h3>Инициализация данных в FireBase</h3>\n            <ul>\n                <li>Status: {status}</li>\n                <li>Progress: {progress}%</li>\n                {error && <li>error: {error}</li>}\n            </ul>\n            <button className=\"btn btn-primary\" onClick={handleClick}>\n                Инициализировать\n            </button>\n        </div>\n    );\n};\n\nexport default Main;\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\n\r\nconst NavProfile = () => {\r\n    const { currentUser } = useAuth();\r\n    const [isOpen, setOpen] = useState(false);\r\n    const toggleMenu = () => {\r\n        setOpen((prevState) => !prevState);\r\n    };\r\n    return (\r\n        <div className=\"dropdown\" onClick={toggleMenu}>\r\n            <div className=\"btn dropdown-toggle d-flex align-items-center\">\r\n                <div className=\"me-2\">{currentUser.name}</div>\r\n                <img\r\n                    src={currentUser.image}\r\n                    height=\"40\"\r\n                    alt=\"\"\r\n                    className=\"img-responsive rounded-circle\"\r\n                />\r\n            </div>\r\n            <div className={\"w-100 dropdown-menu\" + (isOpen ? \" show\" : \"\")}>\r\n                <Link\r\n                    to={`/users/${currentUser._id}`}\r\n                    className=\"dropdown-item\"\r\n                >\r\n                    Profile\r\n                </Link>\r\n                <Link to=\"/logout\" className=\"dropdown-item\">\r\n                    Log out\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavProfile;\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport NavProfile from \"./navProfile\";\n\nconst NavBar = () => {\n    const { currentUser } = useAuth();\n    return (\n        <nav className=\"navbar bg-light mb-3\">\n            <div className=\"container-fluid\">\n                <ul className=\"nav\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/\">\n                            Main\n                        </Link>\n                    </li>\n                    {currentUser && (\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/users\">\n                                Users\n                            </Link>\n                        </li>\n                    )}\n                </ul>\n                <div className=\"d-flex\">\n                    {currentUser ? (\n                        <NavProfile />\n                    ) : (\n                        <Link className=\"nav-link\" to=\"/login\">\n                            Login\n                        </Link>\n                    )}\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Users from \"./components/layouts/users\";\nimport Login from \"./components/layouts/login\";\nimport LogOut from \"./components/layouts/logOut\";\nimport Main from \"./components/layouts/main\";\nimport NavBar from \"./components/ui/navBar\";\nimport { ToastContainer } from \"react-toastify\";\nimport { ProfessionProvider } from \"./hooks/useProfession\";\nimport { QualitiesProvider } from \"./hooks/useQuality\";\nimport AuthProvider from \"./hooks/useAuth\";\n\nfunction App() {\n    return (\n        <div>\n            <AuthProvider>\n                <NavBar />\n\n                <QualitiesProvider>\n                    <ProfessionProvider>\n                        <Switch>\n                            <Route\n                                path=\"/users/:userId?/:edit?\"\n                                component={Users}\n                            />\n                            <Route path=\"/login/:type?\" component={Login} />\n                            <Route path=\"/logout\" component={LogOut} />\n                            <Route path=\"/\" exact component={Main} />\n                            <Redirect to=\"/\" />\n                        </Switch>\n                    </ProfessionProvider>\n                </QualitiesProvider>\n            </AuthProvider>\n\n            <ToastContainer />\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport App from \"./app\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}