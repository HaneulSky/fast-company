{"version":3,"sources":["reportWebVitals.js","components/common/pagination.jsx","components/common/groupList.jsx","api/fake.api/professions.api.js","api/fake.api/user.api.js","api/fake.api/qualities.api.js","api/fake.api/comments.api.js","api/index.js","components/ui/searchStatus.jsx","components/common/bookmark.jsx","services/http.service.js","services/qualities.service.js","hooks/useQuality.jsx","components/ui/qualities/qualitie.jsx","components/ui/qualities/qualitiesList.jsx","components/ui/qualities/index.js","components/common/table/tableHeader.jsx","components/common/table/tableBody.jsx","components/common/table/index.js","components/common/table/table.jsx","services/profession.service.js","hooks/useProfession.jsx","components/ui/profession.jsx","components/ui/usersTable.jsx","utils/validator.js","utils/formatDate.js","components/common/comments/comment.jsx","components/common/comments/commentList.jsx","components/common/form/selectField.jsx","components/common/form/textAreaField.jsx","components/ui/addCommentForm.jsx","components/ui/userCard.jsx","components/ui/qualitiesCard.jsx","components/ui/completedMeetingsCard.jsx","components/page/userPage/index.js","components/page/userPage/userPage.jsx","components/common/form/searchField.jsx","services/user.service.js","hooks/useUsers.jsx","components/page/usersListPage/index.js","components/page/usersListPage/usersListPage.jsx","utils/paginate.js","components/layouts/users.jsx","components/ui/navBar.jsx","utils/mockData.js","components/layouts/main.jsx","components/common/form/textField.jsx","components/common/form/checkBoxField.jsx","services/localStorage.service.js","hooks/useAuth.jsx","components/ui/loginForm.jsx","components/common/form/radioField.jsx","components/common/form/multiSelectField.jsx","components/ui/registerForm.jsx","components/layouts/login.jsx","components/ui/editUserForm.jsx","app.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Pagination","itemsCount","pageSize","onPageChange","currentPage","pageCount","Math","ceil","pages","_","range","className","map","page","onClick","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","Array","isArray","Object","keys","item","role","defaultProps","professionsObject","doctor","_id","name","waiter","physics","engineer","actor","cook","fetchAll","Promise","resolve","window","setTimeout","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","profession","professions","completedMeetings","rate","bookmark","localStorage","getItem","setItem","JSON","stringify","parse","getById","id","find","user","update","data","userIndex","findIndex","u","comments","userId","pageId","content","created_at","API","fetchCommentsForUser","filter","c","add","newComment","Date","now","random","toString","substr","push","remove","newComments","x","console","log","SearchStatus","onPhrase","length","Bookmark","status","rest","http","axios","create","baseURL","configFile","apiEndpoint","interceptors","request","use","config","isFireBase","containSlash","test","url","slice","error","reject","response","res","key","toast","httpService","get","post","put","delete","qualityService","a","QualitiesContex","React","createContext","useQualities","useContext","QualitiesProvider","children","useState","setQualities","setError","isLoading","setLoading","useEffect","errorCatcher","getQualities","message","Provider","value","getQuality","q","Qualitie","qualityId","style","QualitiesList","qualitiesId","quality","Qualities","TableHeader","onSort","selectedSort","columns","column","path","order","undefined","scope","currentPath","TableBody","renderContent","component","Table","professionService","req","ProfessionContext","useProfession","ProfessionProvider","setProfessions","getProfessionsList","getProfession","prof","Profession","UsersTable","onBookmark","onDelete","to","validator","errors","validate","validateMethod","statusValidate","trim","fieldName","formatDate","param","monthNames","date","diff","getHours","getMinutes","getDate","getMonth","getFullYear","Comment","comment","setUser","api","src","alt","width","height","CommentList","sortedComments","sort","b","SelectField","label","onChange","defaultOption","options","optionsArray","optionName","htmlFor","required","target","disabled","option","TextAreaField","rows","AddCommentForm","isValid","onSubmit","userName","userMessage","type","UserCard","substring","QualitiesCard","CompletedMeetingsCard","UserPage","setUsers","setErrors","setComments","newCommentData","setNewCommentData","getComments","validatorConfig","isRequired","prevState","e","preventDefault","SearchField","placeholder","userEndPoint","userService","payload","UserContext","UserProvider","getUsers","UsersListPage","setCurrentPage","selectedProf","setSelectedProf","iter","sortBy","setSortBy","search","setSearch","useParams","filteredUsers","toLowerCase","indexOf","count","usersCrop","pageNumber","startIndex","take","paginate","orderBy","num","lastOne","Number","userID","newArray","pageIndex","Users","NavBar","useMockData","statusConsts","setStatus","progress","setProgress","setCount","summuryCount","incrementCount","qual","newProgress","floor","updateProgress","initialize","Main","TextField","showPassword","setShowPassword","CheckBoxField","checked","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","setTokens","refreshToken","idToken","expiresIn","expiresDate","getTime","httpAuth","AuthContext","useAuth","AuthProvider","currentUser","setCurrentUser","email","password","process","REACT_APP_FIREBASE_KEY","returnSecureToken","createUser","localId","code","signUp","signIn","LoginForm","history","useHistory","stayOn","setData","isEmail","isCapitalSymbol","isContainDigit","min","handleChange","handleSubmit","RadioField","MultiSelectField","selected","closeMenuOnSelect","isMulti","classNamePrefix","RegisterForm","sex","licence","qualitiesList","professionsList","p","newData","Login","formType","setFormType","toggleFormType","params","EditUserForm","setIsLoading","goBack","values","App","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69de955c.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pageCount = Math.ceil(itemsCount / pageSize);\n    if (pageCount === 1) return null;\n\n    const pages = _.range(1, pageCount + 1);\n\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        className={\n                            \"page-item \" +\n                            (page === currentPage ? \"active\" : \"\")\n                        }\n                        key={page}\n                    >\n                        <a\n                            className=\"page-link\"\n                            onClick={() => onPageChange(page)}\n                        >\n                            {page}\n                        </a>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\n\nPagination.propTypes = {\n    itemsCount: PropTypes.number,\n    pageSize: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}) => {\n    if (Array.isArray) {\n        return (\n            <ul className=\"list-group\">\n                {Object.keys(items).map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            \"list-group-item\" +\n                            (items[item] === selectedItem ? \" active\" : \"\")\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n    return (\n        <ul className=\"list-group\">\n            {items.map((item) => (\n                <li\n                    key={item[valueProperty]}\n                    className={\n                        \"list-group-item\" +\n                        (item === selectedItem ? \" active\" : \"\")\n                    }\n                    onClick={() => onItemSelect(item)}\n                    role=\"button\"\n                >\n                    {item[contentProperty]}\n                </li>\n            ))}\n        </ul>\n    );\n};\nGroupList.defaultProps = {\n    valueProperty: \"_id\",\n    contentProperty: \"name\"\n};\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","export const professionsObject = {\n    doctor: { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    waiter: { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    physics: { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    engineer: { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    actor: { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    cook: { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n};\nexport const professions = [\n    { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n];\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(professionsObject);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","import { professionsObject as professions } from \"./professions.api\";\nconst qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\n\nconst users = [\n    {\n        _id: \"67rdca3eeb7f6fgeed471815\",\n        name: \"Джон Дориан\",\n        profession: professions.doctor,\n        qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n        completedMeetings: 36,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471816\",\n        name: \"Кокс\",\n        profession: professions.doctor,\n        qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n        completedMeetings: 15,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471817\",\n        name: \"Боб Келсо\",\n        profession: professions.doctor,\n        qualities: [qualities.buller],\n        completedMeetings: 247,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471818\",\n        name: \"Рэйчел Грин\",\n        profession: professions.waiter,\n        qualities: [qualities.uncertain],\n        completedMeetings: 148,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471819\",\n        name: \"Шелдон Купер\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 37,\n        rate: 4.6,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471820\",\n        name: \"Леонард Хофстедтер\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 147,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471821\",\n        name: \"Говард Воловиц\",\n        profession: professions.engineer,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 72,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471822\",\n        name: \"Никола Тесла\",\n        profession: professions.engineer,\n        qualities: [qualities.handsome],\n        completedMeetings: 72,\n        rate: 5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471823\",\n        name: \"Моника Геллер\",\n        profession: professions.cook,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471824\",\n        name: \"Рататуй\",\n        profession: professions.cook,\n        qualities: [qualities.handsome, qualities.buller],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181f\",\n        name: \"Джоуи Триббиани\",\n        profession: professions.actor,\n        qualities: [qualities.uncertain, qualities.strange],\n        completedMeetings: 434,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181r\",\n        name: \"Брэд Питт\",\n        profession: professions.actor,\n        qualities: [qualities.handsome],\n        completedMeetings: 434,\n        rate: 5,\n        bookmark: false\n    }\n];\nif (!localStorage.getItem(\"users\")) {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n}\n\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(JSON.parse(localStorage.getItem(\"users\")));\n        }, 2000);\n    });\nconst update = (id, data) =>\n    new Promise((resolve) => {\n        const users = JSON.parse(localStorage.getItem(\"users\"));\n        const userIndex = users.findIndex((u) => u._id === id);\n        users[userIndex] = { ...users[userIndex], ...data };\n        localStorage.setItem(\"users\", JSON.stringify(users));\n        resolve(users[userIndex]);\n    });\n\nconst getById = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"users\")).find(\n                    (user) => user._id === id\n                )\n            );\n        }, 1000);\n    });\nexport default {\n    fetchAll,\n    getById,\n    update\n};\n","const qualities = {\r\n    tedious: {\r\n        _id: \"67rdca3eeb7f6fgeed471198\",\r\n        name: \"Нудила\",\r\n        color: \"primary\"\r\n    },\r\n    strange: {\r\n        _id: \"67rdca3eeb7f6fgeed471100\",\r\n        name: \"Странный\",\r\n        color: \"secondary\"\r\n    },\r\n    buller: {\r\n        _id: \"67rdca3eeb7f6fgeed4711012\",\r\n        name: \"Троль\",\r\n        color: \"success\"\r\n    },\r\n    alcoholic: {\r\n        _id: \"67rdca3eeb7f6fgeed471101\",\r\n        name: \"Алкоголик\",\r\n        color: \"danger\"\r\n    },\r\n    handsome: {\r\n        _id: \"67rdca3eeb7f6fgeed471103\",\r\n        name: \"Красавчик\",\r\n        color: \"info\"\r\n    },\r\n    uncertain: {\r\n        _id: \"67rdca3eeb7f6fgeed471102\",\r\n        name: \"Неуверенный\",\r\n        color: \"dark\"\r\n    }\r\n};\r\nconst fetchAll = () =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function () {\r\n            resolve(qualities);\r\n        }, 2000);\r\n    });\r\n\r\nexport default {\r\n    fetchAll\r\n};\r\n","const comments = [\n    {\n        _id: \"67rdca3eeb7f6fg\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor\",\n        created_at: \"1633576399367\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdasd\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor and etc\",\n        created_at: \"1633573058520\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdaasd\",\n        pageId: \"67rdca3eeb7f6fgeed471817\",\n        userId: \"67rdca3eeb7f6fgeed471817\",\n        content: \"Lorem ipsum dolor and etc hgf\",\n        created_at: \"1633573058520\"\n    }\n];\nif (!localStorage.getItem(\"comments\")) {\n    localStorage.setItem(\"comments\", JSON.stringify(comments));\n}\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(comments);\n        }, 200);\n    });\n\nconst fetchCommentsForUser = (userId) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"comments\")).filter(\n                    (c) => c.pageId === userId\n                )\n            );\n        }, 200);\n    });\nconst add = (data) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComment = {\n                ...data,\n                created_at: Date.now(),\n                _id: Math.random().toString(36).substr(2, 9)\n            };\n            comments.push(newComment);\n            localStorage.setItem(\"comments\", JSON.stringify(comments));\n            resolve(newComment);\n        }, 200);\n    });\n\nconst remove = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComments = comments.filter((x) => x._id !== id);\n            console.log(id);\n            console.log(newComments);\n            localStorage.setItem(\"comments\", JSON.stringify(newComments));\n            resolve(id);\n        }, 200);\n    });\nexport default {\n    fetchAll,\n    fetchCommentsForUser,\n    add,\n    remove\n};\n","import users from \"./fake.api/user.api\";\nimport professions from \"./fake.api/professions.api\";\nimport qualities from \"./fake.api/qualities.api\";\nimport comments from \"./fake.api/comments.api\";\nconst API = {\n    users,\n    professions,\n    qualities,\n    comments\n};\nexport default API;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SearchStatus = ({ onPhrase, length }) => {\n    return (\n        <h2>\n            <span className={\"badge bg-\" + (length > 0 ? \"primary\" : \"danger\")}>\n                {length > 0\n                    ? `${length + \" \" + onPhrase(length)}   с тобой сегодня`\n                    : \"Никто с тобой не тусанет\"}\n            </span>\n        </h2>\n    );\n};\n\nSearchStatus.propTypes = {\n    onPhrase: PropTypes.func.isRequired,\n    length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst Bookmark = ({ status, ...rest }) => {\n    return (\n        <button {...rest}>\n            <i className={\"bi bi-bookmark\" + (status ? \"-heart-fill\" : \"\")}></i>\n        </button>\n    );\n};\nBookmark.propTypes = {\n    status: PropTypes.bool\n};\n\nexport default Bookmark;\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport configFile from \"../config.json\";\r\n\r\nconst http = axios.create({\r\n    baseURL: configFile.apiEndpoint\r\n});\r\nhttp.interceptors.request.use(\r\n    function (config) {\r\n        if (configFile.isFireBase) {\r\n            const containSlash = /\\/$/gi.test(config.url);\r\n            config.url =\r\n                (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nfunction transformData(data) {\r\n    return data && !data._id\r\n        ? Object.keys(data).map((key) => ({\r\n              ...data[key]\r\n          }))\r\n        : data;\r\n}\r\nhttp.interceptors.response.use(\r\n    (res) => {\r\n        if (configFile.isFireBase) {\r\n            res.data = { content: transformData(res.data) };\r\n        }\r\n        return res;\r\n    },\r\n    function (error) {\r\n        const expectedErrors =\r\n            error.response &&\r\n            error.response.status >= 400 &&\r\n            error.response.status < 500;\r\n        if (!expectedErrors) {\r\n            console.log(error);\r\n            toast.error(\"Something was wrong. Try it later\");\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nconst httpService = {\r\n    get: http.get,\r\n    post: http.post,\r\n    put: http.put,\r\n    delete: http.delete\r\n};\r\n\r\nexport default httpService;\r\n","import httpService from \"./http.service\";\r\n\r\nconst qualityEndpoint = \"quality/\";\r\n\r\nconst qualityService = {\r\n    get: async () => {\r\n        const { data } = await httpService.get(qualityEndpoint);\r\n        return data;\r\n    }\r\n};\r\n\r\nexport default qualityService;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\nimport qualityService from \"../services/qualities.service\";\r\n\r\nconst QualitiesContex = React.createContext();\r\n\r\nexport const useQualities = () => {\r\n    return useContext(QualitiesContex);\r\n};\r\n\r\nexport const QualitiesProvider = ({ children }) => {\r\n    const [qualities, setQualities] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const getQualities = async () => {\r\n            try {\r\n                const { content } = await qualityService.get();\r\n                setQualities(content);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                errorCatcher(error);\r\n            }\r\n        };\r\n        getQualities();\r\n    }, []);\r\n    const getQuality = (id) => {\r\n        return qualities.find((q) => q._id === id);\r\n    };\r\n\r\n    function errorCatcher(error) {\r\n        const { message } = error.response.data;\r\n        setError(message);\r\n    }\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n\r\n    return (\r\n        <QualitiesContex.Provider\r\n            value={{\r\n                qualities,\r\n                getQuality,\r\n                isLoading\r\n            }}\r\n        >\r\n            {children}\r\n        </QualitiesContex.Provider>\r\n    );\r\n};\r\n\r\nQualitiesProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useQualities } from \"../../../hooks/useQuality\";\n\nconst Qualitie = ({ qualityId }) => {\n    const { getQuality } = useQualities();\n    const { _id, color, name } = getQuality(qualityId);\n    return (\n        <span\n            key={_id}\n            className={`badge me-2 bg-${color}`}\n            style={{ color: \"white\" }}\n        >\n            {name}\n        </span>\n    );\n};\n\nQualitie.propTypes = {\n    qualityId: PropTypes.string\n};\n\nexport default Qualitie;\n","import React from \"react\";\nimport Qualitie from \"./qualitie\";\nimport PropTypes from \"prop-types\";\nimport { useQualities } from \"../../../hooks/useQuality\";\n\nconst QualitiesList = ({ qualitiesId }) => {\n    const { isLoading } = useQualities();\n    if (isLoading) return \"Loading ...\";\n    return (\n        <>\n            {qualitiesId.map((quality) => (\n                <Qualitie key={quality._id} {...quality} qualityId={quality} />\n            ))}\n        </>\n    );\n};\n\nQualitiesList.propTypes = {\n    qualitiesId: PropTypes.array.isRequired\n};\n\nexport default QualitiesList;\n","import Qualities from \"./qualitiesList\";\nexport default Qualities;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const caretDirection = (currentPath) => {\n        if (selectedSort.path === currentPath) {\n            if (selectedSort.order === \"asc\") {\n                return <i className=\"bi bi-caret-up-fill\"></i>;\n            } else return <i className=\"bi bi-caret-down-fill\"></i>;\n        }\n        return null;\n    };\n\n    const handleSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({\n                ...selectedSort,\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n            });\n        } else {\n            onSort({ path: item, order: \"asc\" });\n        }\n    };\n    return (\n        <thead>\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handleSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && \"button\" }}\n                        scope=\"col\"\n                    >\n                        {columns[column].name}\n                        {caretDirection(columns[column].path)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\n\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === \"function\") {\n                return component(item);\n            }\n            return component;\n        }\n        return _.get(item, columns[column].path);\n    };\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item._id}>\n                    {Object.keys(columns).map((column) => (\n                        <td key={column}>{renderContent(item, column)}</td>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\nexport default Table;\nexport { TableBody, TableHeader };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n    return (\n        <table className=\"table\">\n            {children || (\n                <>\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\n                    <TableBody {...{ columns, data }} />\n                </>\n            )}\n        </table>\n    );\n};\n\nTable.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired,\n    data: PropTypes.array.isRequired,\n    children: PropTypes.array\n};\n\nexport default Table;\n","import httpService from \"./http.service\";\r\n\r\nconst professionEndPoint = \"profession/\";\r\n\r\nconst professionService = {\r\n    get: async () => {\r\n        const req = await httpService.get(professionEndPoint);\r\n        return req.data;\r\n    }\r\n};\r\n\r\nexport default professionService;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport professionService from \"../services/profession.service\";\r\nimport PropTypes from \"prop-types\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ProfessionContext = React.createContext();\r\n\r\nexport const useProfession = () => {\r\n    return useContext(ProfessionContext);\r\n};\r\n\r\nexport const ProfessionProvider = ({ children }) => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [professions, setProfessions] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getProfessionsList();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n\r\n    function errorCatcher(error) {\r\n        const { message } = error.response.data;\r\n        setError(message);\r\n        setLoading(false);\r\n    }\r\n\r\n    function getProfession(id) {\r\n        return professions.find((prof) => prof._id === id);\r\n    }\r\n\r\n    async function getProfessionsList() {\r\n        try {\r\n            const { content } = await professionService.get();\r\n            setProfessions(content);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ProfessionContext.Provider\r\n            value={{ isLoading, professions, getProfession }}\r\n        >\r\n            {children}\r\n        </ProfessionContext.Provider>\r\n    );\r\n};\r\n\r\nProfessionProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useProfession } from \"../../hooks/useProfession\";\r\n\r\nconst Profession = ({ id }) => {\r\n    const { isLoading, getProfession } = useProfession();\r\n    const profession = getProfession(id);\r\n    if (!isLoading) {\r\n        return <p>{profession.name}</p>;\r\n    } else return \"Loading...\";\r\n};\r\n\r\nProfession.propTypes = {\r\n    id: PropTypes.string\r\n};\r\n\r\nexport default Profession;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Bookmark from \"../common/bookmark\";\nimport Qualities from \"./qualities\";\nimport Table from \"../common/table\";\nimport { Link } from \"react-router-dom\";\nimport Profession from \"./profession\";\n\nconst UsersTable = ({ users, onSort, selectedSort, onBookmark, onDelete }) => {\n    const columns = {\n        name: {\n            path: \"name\",\n            name: \"Имя\",\n            component: (user) => (\n                <Link to={`/users/${user._id}`}>{user.name}</Link>\n            )\n        },\n        qualities: {\n            name: \"Качества\",\n            component: (user) => <Qualities qualitiesId={user.qualities} />\n        },\n        professions: {\n            name: \"Профессия\",\n            component: (user) => <Profession id={user.profession} />\n        },\n        completedMeetings: {\n            path: \"completedMeetings\",\n            name: \"Встретился раз\"\n        },\n        rate: { path: \"rate\", name: \"Оценка\" },\n        bookmark: {\n            path: \"bookmark\",\n            name: \"Избранное\",\n            component: (user) => (\n                <Bookmark\n                    status={user.bookmark}\n                    onClick={() => onBookmark(user._id)}\n                />\n            )\n        },\n        delete: {\n            component: (user) => (\n                <button\n                    className=\"btn btn-danger\"\n                    onClick={() => onDelete(user._id)}\n                >\n                    Delete\n                </button>\n            )\n        }\n    };\n    return (\n        <Table\n            onSort={onSort}\n            selectedSort={selectedSort}\n            columns={columns}\n            data={users}\n        />\n    );\n};\n\nUsersTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    onBookmark: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired\n};\n\nexport default UsersTable;\n","export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n            case \"isRequired\": {\n                if (typeof data === \"boolean\") {\n                    statusValidate = !data;\n                } else {\n                    statusValidate = data.trim() === \"\";\n                }\n                break;\n            }\n            case \"isEmail\":\n                {\n                    const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n                    statusValidate = !emailRegExp.test(data);\n                }\n\n                break;\n            case \"isCapitalSymbol\":\n                {\n                    const capitalRegExp = /[A-Z]+/g;\n                    statusValidate = !capitalRegExp.test(data);\n                }\n\n                break;\n            case \"isContainDigit\":\n                {\n                    const digitRegExp = /\\d+/g;\n                    statusValidate = !digitRegExp.test(data);\n                }\n                break;\n            case \"min\":\n                statusValidate = data.length < config.value;\n                break;\n\n            default:\n                break;\n        }\n\n        if (statusValidate) return config.message;\n    }\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","export function formatDate(param) {\r\n    const monthNames = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\"\r\n    ];\r\n    const date = new Date(param);\r\n    const dateToday = Date.now();\r\n    const diff = dateToday - +date;\r\n    if (diff / 60000 <= 1) {\r\n        return \"1 минуту назад\";\r\n    } else if (diff / 60000 <= 5) {\r\n        return \"5 минут назад\";\r\n    } else if (diff / 60000 <= 10) {\r\n        return \"10 минут назад\";\r\n    } else if (diff / 60000 <= 30) {\r\n        return \"30 минут назад\";\r\n    } else if (diff / 60000 <= 1440) {\r\n        return `${date.getHours()} : ${date.getMinutes()}`;\r\n    } else if (diff / 60000 <= 1440 * 365) {\r\n        return `${date.getDate()} ${monthNames[date.getMonth()]}`;\r\n    } else if (diff / 60000 > 1440 * 365) {\r\n        return `${date.getDate()} ${\r\n            monthNames[date.getMonth()]\r\n        } ${date.getFullYear()}`;\r\n    }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport api from \"../../../api\";\r\nimport { formatDate } from \"../../../utils/formatDate\";\r\n\r\nconst Comment = ({ comment, onDelete }) => {\r\n    const [user, setUser] = useState();\r\n    useEffect(() => {\r\n        api.users.getById(comment.userId).then((data) => {\r\n            setUser(data);\r\n        });\r\n    }, []);\r\n\r\n    if (user) {\r\n        return (\r\n            <div className=\"bg-light card-body mb-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"d-flex flex-start\">\r\n                            <img\r\n                                src=\"https://avatars.dicebear.com/api/avataaars/qweqasdas.svg\"\r\n                                className=\"rounded-circle shadow-1-strong me-3\"\r\n                                alt=\"avatar\"\r\n                                width=\"65\"\r\n                                height=\"65\"\r\n                            />\r\n                            <div className=\"flex-grow-1 flex-shrink-1\">\r\n                                <div className=\"mb-4\">\r\n                                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                                        <p className=\"mb-1\">\r\n                                            {user.name}\r\n                                            <span className=\"small\">\r\n                                                {\" - \"}\r\n                                                {formatDate(\r\n                                                    +comment.created_at\r\n                                                )}\r\n                                            </span>\r\n                                        </p>\r\n                                        <button\r\n                                            className=\"btn btn-sm text-primary d-flex align-items-center\"\r\n                                            onClick={() =>\r\n                                                onDelete(comment._id)\r\n                                            }\r\n                                        >\r\n                                            <i className=\"bi bi-x-lg\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                    <p className=\"small mb-0\">\r\n                                        {comment.content}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <p>Loading...</p>;\r\n    }\r\n};\r\n\r\nComment.propTypes = {\r\n    comment: PropTypes.object,\r\n    onDelete: PropTypes.func\r\n};\r\n\r\nexport default Comment;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Comment from \"./comment\";\r\n\r\nconst CommentList = ({ comments, onDelete }) => {\r\n    const sortedComments = comments.sort((a, b) => b.created_at - a.created_at);\r\n\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <h2>Comments</h2>\r\n                <hr />\r\n                {sortedComments.map((comment) => (\r\n                    <Comment\r\n                        key={comment._id}\r\n                        comment={comment}\r\n                        onDelete={onDelete}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nCommentList.propTypes = {\r\n    comments: PropTypes.array,\r\n    onDelete: PropTypes.func\r\n};\r\n\r\nexport default CommentList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SelectField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    defaultOption,\r\n    options,\r\n    error,\r\n    name\r\n}) => {\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    const getInputClasses = () => {\r\n        return \"form-select\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n    const optionsArray =\r\n        !Array.isArray(options) && typeof options === \"object\"\r\n            ? Object.keys(options).map((optionName) => ({\r\n                  name: options[optionName].name,\r\n                  value: options[optionName]._id\r\n              }))\r\n            : options;\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label htmlFor=\"validationCustom04\" className=\"form-label\">\r\n                {label}\r\n            </label>\r\n            <select\r\n                className={getInputClasses()}\r\n                name={name}\r\n                id=\"validationCustom04\"\r\n                required\r\n                onChange={handleChange}\r\n                value={value}\r\n            >\r\n                <option disabled value=\"\">\r\n                    {defaultOption}\r\n                </option>\r\n                {optionsArray &&\r\n                    optionsArray.map((option) => (\r\n                        <option value={option.value} key={option.value}>\r\n                            {option.label}\r\n                        </option>\r\n                    ))}\r\n            </select>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nSelectField.propTypes = {\r\n    label: PropTypes.string,\r\n    value: PropTypes.oneOfType([\r\n        PropTypes.object,\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]),\r\n    onChange: PropTypes.func,\r\n    defaultOption: PropTypes.string,\r\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    error: PropTypes.string,\r\n    name: PropTypes.string\r\n};\r\n\r\nexport default SelectField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextAreaField = ({ label, error, onChange, name, value }) => {\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    const getInputClasses = () => {\r\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\r\n                {label}\r\n            </label>\r\n            <textarea\r\n                onChange={handleChange}\r\n                className={getInputClasses()}\r\n                name={name}\r\n                rows=\"3\"\r\n                value={value}\r\n            >\r\n                {}\r\n            </textarea>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextAreaField.propTypes = {\r\n    label: PropTypes.string,\r\n    error: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    name: PropTypes.string,\r\n    value: PropTypes.string\r\n};\r\n\r\nexport default TextAreaField;\r\n","import React from \"react\";\r\nimport SelectField from \"../common/form/selectField\";\r\nimport PropTypes from \"prop-types\";\r\nimport TextAreaField from \"../common/form/textAreaField\";\r\n\r\nconst AddCommentForm = ({\r\n    isValid,\r\n    onChange,\r\n    users,\r\n    errors,\r\n    onSubmit,\r\n    data\r\n}) => {\r\n    return (\r\n        <div>\r\n            <h2>New comment</h2>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"mb-4\">\r\n                    <SelectField\r\n                        defaultOption=\"Выберите пользователя\"\r\n                        onChange={onChange}\r\n                        options={users}\r\n                        error={errors.userName}\r\n                        value={data.userName}\r\n                        name=\"userName\"\r\n                        label=\"Выберите пользователя\"\r\n                    />\r\n                </div>\r\n                <TextAreaField\r\n                    label=\"Сообщение\"\r\n                    onChange={onChange}\r\n                    error={errors.userMessage}\r\n                    value={data.userMessage}\r\n                    name=\"userMessage\"\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    disabled={!isValid}\r\n                    className=\"btn btn-primary\"\r\n                    onSubmit={() => onSubmit()}\r\n                >\r\n                    Опубликовать\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nAddCommentForm.propTypes = {\r\n    isValid: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n    users: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n    errors: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n    onSubmit: PropTypes.func,\r\n    data: PropTypes.object\r\n};\r\n\r\nexport default AddCommentForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserCard = ({ user, id }) => {\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <Link to={`/users/${id}/edit`}>\r\n                    <button\r\n                        className=\"\r\n                                    position-absolute\r\n                                    top-0\r\n                                    end-0\r\n                                    btn btn-light btn-sm\r\n                                \"\r\n                    >\r\n                        <i className=\"bi bi-gear\"></i>\r\n                    </button>\r\n                </Link>\r\n                <div\r\n                    className=\"d-flex\r\n                                    flex-column\r\n                                    align-items-center\r\n                                    text-center\r\n                                    position-relative\"\r\n                >\r\n                    <img\r\n                        src={`https://avatars.dicebear.com/api/avataaars/${(\r\n                            Math.random() + 1\r\n                        )\r\n                            .toString(36)\r\n                            .substring(7)}.svg`}\r\n                        className=\"rounded-circle shadow-1-strong me-3\"\r\n                        alt=\"avatar\"\r\n                        width=\"150\"\r\n                    />\r\n                    <h2>{user.name}</h2>\r\n                    <h3>Профессия: {user.profession.name}</h3>\r\n                    <div className=\"text-muted\">\r\n                        <i\r\n                            className=\"bi bi-caret-down-fill text-primary\"\r\n                            role=\"button\"\r\n                        ></i>\r\n                        <i\r\n                            className=\"bi bi-caret-up text-secondary\"\r\n                            role=\"button\"\r\n                        ></i>\r\n                        <span className=\"ms-2\">{user.rate}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nUserCard.propTypes = {\r\n    user: PropTypes.object,\r\n    id: PropTypes.string\r\n};\r\n\r\nexport default UserCard;\r\n","import React from \"react\";\r\nimport QualitiesList from \"./qualities/qualitiesList\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst QualitiesCard = ({ user }) => {\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div\r\n                className=\"\r\n                                card-body\r\n                                d-flex\r\n                                flex-column\r\n                                justify-content-center\r\n                                text-center\r\n                            \"\r\n            >\r\n                <h5 className=\"card-title\">\r\n                    <span>Qualities</span>\r\n                </h5>\r\n                <p>\r\n                    <QualitiesList qualities={user.qualities} />\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nQualitiesCard.propTypes = {\r\n    user: PropTypes.object\r\n};\r\n\r\nexport default QualitiesCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CompletedMeetingsCard = ({ user }) => {\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div\r\n                className=\"\r\n                                    card-body\r\n                                    d-flex\r\n                                    flex-column\r\n                                    justify-content-center\r\n                                    text-center\r\n                                \"\r\n            >\r\n                <h5 className=\"card-title\">\r\n                    <span>Completed meetings</span>\r\n                </h5>\r\n                <h1 className=\"display-1\">{user.completedMeetings}</h1>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nCompletedMeetingsCard.propTypes = {\r\n    user: PropTypes.object\r\n};\r\n\r\nexport default CompletedMeetingsCard;\r\n","import UserPage from \"./userPage\";\nexport default UserPage;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport api from \"../../../api\";\nimport { validator } from \"../../../utils/validator\";\nimport CommentList from \"../../common/comments/commentList\";\nimport AddCommentForm from \"../../ui/addCommentForm\";\nimport UserCard from \"../../ui/userCard\";\nimport QualitiesCard from \"../../ui/qualitiesCard\";\nimport CompletedMeetingsCard from \"../../ui/completedMeetingsCard\";\n\nconst UserPage = ({ id }) => {\n    const [user, setUser] = useState();\n    const [users, setUsers] = useState([]);\n    const [errors, setErrors] = useState({});\n    const [comments, setComments] = useState();\n    const [newCommentData, setNewCommentData] = useState({\n        userName: \"\",\n        userMessage: \"\"\n    });\n\n    const getComments = () => {\n        api.comments.fetchCommentsForUser(id).then((data) => setComments(data));\n    };\n\n    useEffect(() => {\n        api.users.fetchAll().then((data) => {\n            setUsers(data);\n        });\n        api.users.getById(id).then((data) => {\n            setUser(data);\n        });\n        getComments();\n    }, []);\n\n    const validatorConfig = {\n        userName: {\n            isRequired: {\n                message: \"Обязательно выберите пользователя\"\n            }\n        },\n        userMessage: {\n            isRequired: {\n                message: \"Это поле не должно быть пустым\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [newCommentData]);\n\n    const handleChange = (target) => {\n        setNewCommentData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const handleDelete = (id) => {\n        api.comments.remove(id).then(getComments);\n    };\n    const validate = () => {\n        const errors = validator(newCommentData, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const newComment = {\n            pageId: id,\n            userId: users.find((user) => user.name === newCommentData.userName)\n                ._id,\n            content: newCommentData.userMessage\n        };\n        api.comments.add(newComment).then(getComments);\n\n        setNewCommentData((prevState) => ({\n            ...prevState,\n            userName: \"\",\n            userMessage: \"\"\n        }));\n\n        console.log(comments);\n    };\n\n    if (!user) return <h1>Loading...</h1>;\n\n    return (\n        <div className=\"container\">\n            <div className=\"row gutters-sm\">\n                <div className=\"col-md-4 mb-4\">\n                    <div className=\"card mb-3\">\n                        <UserCard user={user} id={id} />\n                    </div>\n                    <QualitiesCard user={user} />\n                    <CompletedMeetingsCard user={user} />\n                </div>\n                <div className=\"col-md-8\">\n                    <div className=\"card mb-2\">\n                        <div className=\"card-body\">\n                            <AddCommentForm\n                                isValid={isValid}\n                                onChange={handleChange}\n                                users={users}\n                                errors={errors}\n                                onSubmit={handleSubmit}\n                                data={newCommentData}\n                            />\n                        </div>\n                    </div>\n\n                    {!!comments.length && (\n                        <CommentList\n                            onDelete={handleDelete}\n                            comments={comments}\n                            users={users}\n                            id={id}\n                        />\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUserPage.propTypes = {\n    id: PropTypes.string\n};\n\nexport default UserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SearchField = ({ onChange, value }) => {\n    return (\n        <div className=\"input-group\">\n            <input\n                type=\"search\"\n                className=\"form-control ds-input\"\n                value={value}\n                name=\"search-input\"\n                placeholder=\"Search...\"\n                onChange={onChange}\n            />\n        </div>\n    );\n};\n\nSearchField.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string\n};\n\nexport default SearchField;\n","import httpService from \"./http.service\";\r\n\r\nconst userEndPoint = \"user/\";\r\n\r\nconst userService = {\r\n    get: async () => {\r\n        const { data } = await httpService.get(userEndPoint);\r\n        return data;\r\n    },\r\n    create: async (payload) => {\r\n        const { data } = await httpService.put(\r\n            userEndPoint + payload._id,\r\n            payload\r\n        );\r\n        return data;\r\n    }\r\n};\r\n\r\nexport default userService;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport userService from \"../services/user.service\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport const useUser = () => {\r\n    return useContext(UserContext);\r\n};\r\n\r\nconst UserProvider = ({ children }) => {\r\n    const [users, setUsers] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n\r\n    async function getUsers() {\r\n        try {\r\n            const { content } = await userService.get();\r\n            setUsers(content);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n\r\n    function errorCatcher(error) {\r\n        const { message } = error.response.data;\r\n        setError(message);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={{ users }}>\r\n            {!isLoading ? children : \"Loading ...\"}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n\r\nUserProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n\r\nexport default UserProvider;\r\n","import UsersListPage from \"./usersListPage\";\nexport default UsersListPage;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../../../utils/paginate.js\";\nimport Pagination from \"../../common/pagination\";\nimport GroupList from \"../../common/groupList\";\nimport api from \"../../../api\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UsersTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\nimport UserPage from \"../../page/userPage\";\nimport { useParams } from \"react-router\";\nimport SearchField from \"../../common/form/searchField\";\nimport { useUser } from \"../../../hooks/useUsers.jsx\";\n\nconst UsersListPage = () => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [professions, setProfessions] = useState();\n    const [selectedProf, setSelectedProf] = useState();\n    const [sortBy, setSortBy] = useState({ iter: \"name\", order: \"asc\" });\n    const [search, setSearch] = useState(\"\");\n    const { userId } = useParams();\n    const { users } = useUser();\n    console.log(users);\n\n    const handleDelete = (userID) => {\n        // return setUsers(\n        //     users.filter(\n        //         (user) => JSON.stringify(user._id) !== JSON.stringify(userID)\n        //     )\n        // );\n        console.log(userID);\n    };\n\n    const toggleBookmark = (userId) => {\n        const newArray = users.map((user) => {\n            if (user._id === userId) {\n                return { ...user, bookmark: !user.bookmark };\n            }\n            return user;\n        });\n        //   setUsers(newArray)\n        console.log(newArray);\n    };\n\n    const pageSize = 8;\n\n    useEffect(() => {\n        api.professions.fetchAll().then((data) => setProfessions(data));\n    }, []);\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [selectedProf]);\n\n    const handleProfessionSelect = (item) => {\n        setSelectedProf(item);\n        setSearch(\"\");\n    };\n\n    const handleSearch = (e) => {\n        setSelectedProf(undefined);\n        setSearch(e.target.value);\n    };\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n\n    if (users) {\n        const filteredUsers = search\n            ? users.filter(\n                  (user) =>\n                      user.name.toLowerCase().indexOf(search.toLowerCase()) !==\n                      -1\n              )\n            : selectedProf\n            ? users.filter(\n                  (user) =>\n                      JSON.stringify(user.profession) ===\n                      JSON.stringify(selectedProf)\n              )\n            : users;\n\n        const count = filteredUsers.length;\n\n        const sortedUsers = _.orderBy(\n            filteredUsers,\n            [sortBy.path],\n            [sortBy.order]\n        );\n\n        const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n\n        const clearFilter = () => {\n            setSelectedProf();\n        };\n\n        const renderPhrase = (num) => {\n            const lastOne = Number(num.toString().slice(-1));\n            if (num > 4 && num < 15) {\n                return \"человек тусанет\";\n            }\n            if (lastOne === 1) return \"человек тусанет\";\n            if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека тусанут\";\n            return \"человек тусанет\";\n        };\n\n        if (userId) {\n            return <UserPage users={users} id={userId} />;\n        }\n\n        return (\n            <div className=\"d-flex\">\n                {professions && (\n                    <div className=\"d-flex flex-column flex0shrink-0 p-3\">\n                        <GroupList\n                            selectedItem={selectedProf}\n                            items={professions}\n                            onItemSelect={handleProfessionSelect}\n                        />\n                        <button\n                            className=\"btn btn-secondary mt-2\"\n                            onClick={clearFilter}\n                        >\n                            Очистить\n                        </button>\n                    </div>\n                )}\n                <div className=\"d-flex flex-column\">\n                    <SearchStatus onPhrase={renderPhrase} length={count} />\n                    <SearchField onChange={handleSearch} value={search} />\n                    {!!count && (\n                        <UsersTable\n                            users={usersCrop}\n                            onDelete={handleDelete}\n                            onBookmark={toggleBookmark}\n                            onSort={handleSort}\n                            selectedSort={sortBy}\n                        />\n                    )}\n                    <div className=\"d-flex justify-content-center\">\n                        <Pagination\n                            itemsCount={count}\n                            pageSize={pageSize}\n                            onPageChange={handlePageChange}\n                            currentPage={currentPage}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return \"loading...\";\n};\n\nUsersListPage.propTypes = {\n    users: PropTypes.array\n};\n\nexport default UsersListPage;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n\n    return _(items).slice(startIndex).take(pageSize).value();\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport UsersListPage from \"../page/usersListPage\";\nimport UserPage from \"../page/userPage\";\nimport { useParams } from \"react-router\";\nimport UserProvider from \"../../hooks/useUsers\";\n\nconst Users = () => {\n    const params = useParams();\n    const { userId } = params;\n    return (\n        <UserProvider>\n            {userId ? <UserPage id={userId} /> : <UsersListPage />}\n        </UserProvider>\n    );\n};\n\nUsers.propTypes = {\n    users: PropTypes.array\n};\n\nexport default Users;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = () => {\n    return (\n        <ul className=\"nav\">\n            <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/\">\n                    Main\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/login\">\n                    Login\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/users\">\n                    Users\n                </Link>\n            </li>\n        </ul>\n    );\n};\n\nexport default NavBar;\n","import { useEffect, useState } from \"react\";\r\nimport professions from \"../mockData/professions.json\";\r\nimport qualities from \"../mockData/qualities.json\";\r\nimport users from \"../mockData/users.json\";\r\nimport httpService from \"../services/http.service\";\r\n\r\nconst useMockData = () => {\r\n    const statusConsts = {\r\n        idle: \"Not Started\",\r\n        pending: \"In Process\",\r\n        successed: \"Ready\",\r\n        error: \"Error occured\"\r\n    };\r\n    const [error, setError] = useState(null);\r\n    const [status, setStatus] = useState(statusConsts.idle);\r\n    const [progress, setProgress] = useState(0);\r\n    const [count, setCount] = useState(0);\r\n    const summuryCount = professions.length + qualities.length + users.length;\r\n    const incrementCount = () => {\r\n        setCount((prevState) => prevState + 1);\r\n    };\r\n    const updateProgress = () => {\r\n        if (count !== 0 && status === statusConsts.idle) {\r\n            setStatus(statusConsts.pending);\r\n        }\r\n        const newProgress = Math.floor((count / summuryCount) * 100);\r\n        if (progress < newProgress) {\r\n            setProgress(() => newProgress);\r\n        }\r\n        if (newProgress === 100) {\r\n            setStatus(statusConsts.successed);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateProgress();\r\n    }, [count]);\r\n    async function initialize() {\r\n        try {\r\n            for (const prof of professions) {\r\n                await httpService.put(\"profession/\" + prof._id, prof);\r\n                incrementCount();\r\n            }\r\n            for (const user of users) {\r\n                await httpService.put(\"user/\" + user._id, user);\r\n                incrementCount();\r\n            }\r\n            for (const qual of qualities) {\r\n                await httpService.put(\"quality/\" + qual._id, qual);\r\n                incrementCount();\r\n            }\r\n        } catch (error) {\r\n            setError(error);\r\n            setStatus(statusConsts.error);\r\n        }\r\n    }\r\n\r\n    return { error, initialize, progress, status };\r\n};\r\n\r\nexport default useMockData;\r\n","import React from \"react\";\nimport useMockData from \"../../utils/mockData\";\n\nconst Main = () => {\n    const { error, initialize, progress, status } = useMockData();\n    const handleClick = () => {\n        console.log(\"clicked\");\n        initialize();\n    };\n    return (\n        <div className=\"container mt-5\">\n            <h1>Main</h1>\n            <h3>Инициализация данных в FireBase</h3>\n            <ul>\n                <li>Status: {status}</li>\n                <li>Progress: {progress}%</li>\n                {error && <li>error: {error}</li>}\n            </ul>\n            <button className=\"btn btn-primary\" onClick={handleClick}>\n                Инициализировать\n            </button>\n        </div>\n    );\n};\n\nexport default Main;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}>{label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    value={value}\n                    onChange={handleChange}\n                    name={name}\n                    className={getInputClasses()}\n                />\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback\">{error}</div>}\n            </div>\n        </div>\n    );\n};\n\nTextField.defaultProps = { type: \"text\" };\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextField;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\r\n    const handleChange = () => {\r\n        onChange({ name: name, value: !value });\r\n    };\r\n    const getInputClasses = () => {\r\n        return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n    return (\r\n        <div className=\"form-check mb-4\">\r\n            <input\r\n                className={getInputClasses()}\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                id={name}\r\n                onChange={handleChange}\r\n                checked={value}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor={name}>\r\n                {children}\r\n            </label>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\nCheckBoxField.propTypes = {\r\n    name: PropTypes.string,\r\n    value: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n    error: PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n\r\nexport default CheckBoxField;\r\n","const TOKEN_KEY = \"jwt-token\";\r\nconst REFRESH_KEY = \"jwt-refresh-token\";\r\nconst EXPIRES_KEY = \"jwt-expires\";\r\n\r\nexport function setTokens({ refreshToken, idToken, expiresIn = 3600 }) {\r\n    const expiresDate = new Date().getTime() + expiresIn * 1000;\r\n    localStorage.setItem(TOKEN_KEY, idToken);\r\n    localStorage.setItem(REFRESH_KEY, refreshToken);\r\n    localStorage.setItem(EXPIRES_KEY, expiresDate);\r\n}\r\n\r\nexport function getAccessToken() {\r\n    return localStorage.getItem(TOKEN_KEY);\r\n}\r\n\r\nexport function getRefreshToken() {\r\n    return localStorage.getItem(REFRESH_KEY);\r\n}\r\n\r\nexport function getTokenExpiresDate() {\r\n    return localStorage.getItem(EXPIRES_KEY);\r\n}\r\n\r\nconst localStorageService = {\r\n    setTokens,\r\n    getAccessToken,\r\n    getRefreshToken,\r\n    getTokenExpiresDate\r\n};\r\n\r\nexport default localStorageService;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport userService from \"../services/user.service\";\r\nimport { toast } from \"react-toastify\";\r\nimport { setTokens } from \"../services/localStorage.service\";\r\n\r\nconst httpAuth = axios.create();\r\nconst AuthContext = React.createContext();\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};\r\n\r\nconst AuthProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState({});\r\n    const [error, setError] = useState(null);\r\n\r\n    async function signUp({ email, password, ...rest }) {\r\n        const url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${process.env.REACT_APP_FIREBASE_KEY}`;\r\n        try {\r\n            const { data } = await httpAuth.post(url, {\r\n                email,\r\n                password,\r\n                returnSecureToken: true\r\n            });\r\n            setTokens(data);\r\n            await createUser({ _id: data.localId, email, ...rest });\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n            const { code, message } = error.response.data.error;\r\n            if (code === 400) {\r\n                if (message === \"EMAIL_EXISTS\") {\r\n                    const errorObject = {\r\n                        email: \"Пользователь с таким Email уже существует\"\r\n                    };\r\n                    throw errorObject;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    async function createUser(data) {\r\n        try {\r\n            const { content } = await userService.create(data);\r\n            setCurrentUser(content);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n\r\n    async function signIn({ email, password }) {\r\n        const url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${process.env.REACT_APP_FIREBASE_KEY}`;\r\n        try {\r\n            const { data } = await httpAuth.post(url, {\r\n                email,\r\n                password,\r\n                returnSecureToken: true\r\n            });\r\n            setTokens(data);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n            const { code, message } = error.response.data.error;\r\n            console.log(code, message);\r\n            if (code === 400) {\r\n                if (message === \"INVALID_PASSWORD\") {\r\n                    const errorObject = {\r\n                        password: \"Введен неверный пароль. Попробуйте еще раз.\"\r\n                    };\r\n                    throw errorObject;\r\n                }\r\n            }\r\n            if (code === 400) {\r\n                if (message === \"EMAIL_NOT_FOUND\") {\r\n                    const errorObject = {\r\n                        email: \"Введен неверный Email. Попробуйте еще раз.\"\r\n                    };\r\n                    throw errorObject;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function errorCatcher(error) {\r\n        const { message } = error.response.data;\r\n        setError(message);\r\n    }\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n    return (\r\n        <AuthContext.Provider value={{ signUp, currentUser, signIn }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nAuthProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n\r\nexport default AuthProvider;\r\n","import React, { useEffect, useState } from \"react\";\nimport TextField from \"../common/form/textField\";\nimport { validator } from \"../../utils/validator\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst LoginForm = () => {\n    const history = useHistory();\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        stayOn: false\n    });\n    const [errors, setErrors] = useState({});\n    const { signIn } = useAuth();\n\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: { message: \"Email введен не корректно\" }\n        },\n        password: {\n            isRequired: { message: \"Пароль обязателен для заполнения\" },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одну цифру\"\n            },\n            min: { message: \"Пароль должен быть не менее 8 символов\", value: 8 }\n        }\n    };\n\n    useEffect(() => {\n        validate();\n    }, [data]);\n\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const isValid = validate();\n        if (!isValid) return;\n\n        signIn(data);\n        console.log(data);\n        console.log(e);\n\n        try {\n            await signIn(data);\n            history.push(\"/\");\n        } catch (error) {\n            setErrors(error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                value={data.email}\n                onChange={handleChange}\n                name=\"email\"\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <CheckBoxField\n                value={data.stayOn}\n                onChange={handleChange}\n                name=\"stayOn\"\n            >\n                Оставаться в системе\n            </CheckBoxField>\n            <button\n                type=\"submit\"\n                disabled={!isValid}\n                className=\"btn btn-secondary w-100 mx-auto\"\n            >\n                Отправить\n            </button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst RadioField = ({ options, name, onChange, value, label }) => {\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label className=\"form-label\">{label}</label>\r\n            <div>\r\n                {options.map((option) => (\r\n                    <div\r\n                        key={option.name + \"_\" + option.value}\r\n                        className=\"form-check form-check-inline\"\r\n                    >\r\n                        <input\r\n                            className=\"form-check-input\"\r\n                            type=\"radio\"\r\n                            name={name}\r\n                            id={option.name + \"_\" + option.value}\r\n                            value={option.value}\r\n                            checked={option.value === value}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor={option.name + \"_\" + option.value}\r\n                        >\r\n                            {option.name}\r\n                        </label>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nRadioField.propTypes = {\r\n    name: PropTypes.string,\r\n    label: PropTypes.string,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    options: PropTypes.array\r\n};\r\n\r\nexport default RadioField;\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MultiSelectField = ({ options, onChange, name, label, selected }) => {\r\n    const optionsArray =\r\n        !Array.isArray(options) && typeof options === \"object\"\r\n            ? Object.keys(options).map((optionName) => ({\r\n                  label: options[optionName].name,\r\n                  value: options[optionName]._id\r\n              }))\r\n            : options;\r\n\r\n    const handleChange = (value) => {\r\n        onChange({ name: name, value });\r\n    };\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label className=\"form-label\">{label}</label>\r\n            <Select\r\n                closeMenuOnSelect={false}\r\n                isMulti\r\n                options={optionsArray}\r\n                className=\"basic-multi-select\"\r\n                classNamePrefix=\"select\"\r\n                onChange={handleChange}\r\n                name={name}\r\n                value={selected}\r\n            />\r\n        </div>\r\n    );\r\n};\r\nMultiSelectField.propTypes = {\r\n    onChange: PropTypes.func,\r\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    name: PropTypes.oneOfType([\r\n        PropTypes.object,\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]),\r\n    label: PropTypes.string,\r\n    selected: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\r\n};\r\n\r\nexport default MultiSelectField;\r\n","import React, { useEffect, useState } from \"react\";\n\nimport TextField from \"../common/form/textField\";\nimport { validator } from \"../../utils/validator\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useQualities } from \"../../hooks/useQuality\";\nimport { useProfession } from \"../../hooks/useProfession\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst RegisterForm = () => {\n    const history = useHistory();\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"Male\",\n        qualities: [],\n        licence: false\n    });\n    const { signUp } = useAuth();\n    const [errors, setErrors] = useState({});\n    const { qualities } = useQualities();\n    const { professions } = useProfession();\n    const qualitiesList = qualities.map((q) => ({\n        label: q.name,\n        value: q._id\n    }));\n    const professionsList = professions.map((p) => ({\n        label: p.name,\n        value: p._id\n    }));\n\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: { message: \"Email введен не корректно\" }\n        },\n        password: {\n            isRequired: { message: \"Пароль обязателен для заполнения\" },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одну цифру\"\n            },\n            min: { message: \"Пароль должен быть не менее 8 символов\", value: 8 }\n        },\n        profession: {\n            isRequired: {\n                message: \"Обязательно выберите вашу профессию\"\n            }\n        },\n        licence: {\n            isRequired: {\n                message:\n                    \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\n            }\n        }\n    };\n\n    useEffect(() => {\n        validate();\n    }, [data]);\n\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const isValid = validate();\n        if (!isValid) return;\n\n        const newData = {\n            ...data,\n            qualities: data.qualities.map((q) => q.value)\n        };\n\n        try {\n            await signUp(newData);\n            history.push(\"/\");\n        } catch (error) {\n            setErrors(error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                value={data.email}\n                onChange={handleChange}\n                name=\"email\"\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <SelectField\n                onChange={handleChange}\n                options={professionsList}\n                defaultOption=\"Choose...\"\n                error={errors.profession}\n                value={data.profession}\n                label=\"Выберите вашу профессию\"\n                name=\"profession\"\n            />\n            <RadioField\n                options={[\n                    { name: \"Male\", value: \"male\" },\n                    { name: \"Female\", value: \"female\" },\n                    { name: \"Other\", value: \"other\" }\n                ]}\n                value={data.sex}\n                name=\"sex\"\n                onChange={handleChange}\n                label=\"Выберите ваш пол \"\n            />\n            <MultiSelectField\n                options={qualitiesList}\n                onChange={handleChange}\n                name=\"qualities\"\n                label=\"Выберите ваши качества\"\n            />\n            <CheckBoxField\n                value={data.licence}\n                onChange={handleChange}\n                name=\"licence\"\n                error={errors.licence}\n            >\n                Подтвердить <a>лицензионное соглашение</a>\n            </CheckBoxField>\n\n            <button\n                type=\"submit\"\n                disabled={!isValid}\n                className=\"btn btn-secondary w-100 mx-auto\"\n            >\n                Отправить\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport LoginForm from \"../ui/loginForm\";\nimport RegisterForm from \"../ui/registerForm\";\n\nconst Login = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"register\" ? type : \"login\"\n    );\n    const toggleFormType = (params) => {\n        setFormType((prevState) =>\n            prevState === \"register\" ? \"login\" : \"register\"\n        );\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {formType === \"register\" ? (\n                        <>\n                            <h3 className=\"mb-4\">Регистрация</h3>\n                            <RegisterForm />\n                            <p>\n                                Already have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    Sign In\n                                </a>\n                            </p>\n                        </>\n                    ) : (\n                        <>\n                            <h3 className=\"mb-4\">Вход</h3>\n                            <LoginForm />\n                            <p>\n                                Don`t have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    Sign Up\n                                </a>\n                            </p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport TextField from \"../common/form/textField\";\r\nimport { validator } from \"../../utils/validator\";\r\nimport api from \"../../api\";\r\nimport SelectField from \"../common/form/selectField\";\r\nimport RadioField from \"../common/form/radioField\";\r\nimport MultiSelectField from \"../common/form/multiSelectField\";\r\n\r\nconst EditUserForm = () => {\r\n    const [data, setData] = useState({\r\n        email: \"\",\r\n        name: \"\",\r\n        profession: \"\",\r\n        sex: \"Male\",\r\n        qualities: [],\r\n        licence: false\r\n    });\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [professions, setProfessions] = useState({});\r\n    const [qualities, setQualities] = useState();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { userId } = useParams();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        api.professions.fetchAll().then((data) => setProfessions(data));\r\n        api.qualities.fetchAll().then((data) => setQualities(data));\r\n    }, []);\r\n    useEffect(() => {\r\n        api.users.getById(userId).then((data) => {\r\n            setData((prevState) => ({\r\n                ...prevState,\r\n                name: data.name,\r\n                email: \"\",\r\n                profession: data.profession._id,\r\n                sex: data.sex,\r\n                qualities: data.qualities\r\n            }));\r\n            setIsLoading(true);\r\n        });\r\n    }, []);\r\n\r\n    const validatorConfig = {\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            },\r\n            isEmail: { message: \"Email введен не корректно\" }\r\n        },\r\n        profession: {\r\n            isRequired: {\r\n                message: \"Обязательно выберите вашу профессию\"\r\n            }\r\n        },\r\n        name: {\r\n            isRequired: {\r\n                message: \"Это поле обязательно для заполнения\"\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n\r\n        console.log(data);\r\n        console.log(e);\r\n\r\n        const prof = {\r\n            _id: data.profession,\r\n            name: Object.keys(professions)\r\n                .map((prof) => professions[prof])\r\n                .find((prof) => prof._id === data.profession).name\r\n        };\r\n        const qual = data.qualities.map((q) => ({\r\n            id: q.value,\r\n            name: q.label,\r\n            color: Object.keys(qualities)\r\n                .map((quality) => qualities[quality])\r\n                .find((quality) => quality._id === q.value).color\r\n        }));\r\n\r\n        const newData = { ...data, profession: prof, qualities: qual };\r\n\r\n        console.log(newData);\r\n\r\n        api.users.update(userId, newData).then(() => goBack());\r\n    };\r\n    const goBack = () => {\r\n        history.push(`/users/${userId}`);\r\n    };\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"container mt-5\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={goBack}\r\n                >\r\n                    <i className=\"bi bi-caret-left\"></i> Назад\r\n                </button>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <TextField\r\n                                label=\"Имя\"\r\n                                name=\"name\"\r\n                                value={data.name}\r\n                                onChange={handleChange}\r\n                                error={errors.name}\r\n                            />\r\n                            <TextField\r\n                                label=\"Электронная почта\"\r\n                                value={data.email}\r\n                                onChange={handleChange}\r\n                                name=\"email\"\r\n                                error={errors.email}\r\n                            />\r\n                            <SelectField\r\n                                onChange={handleChange}\r\n                                options={professions}\r\n                                // defaultOption=\"Choose...\"\r\n                                error={errors.profession}\r\n                                value={data.profession}\r\n                                label=\"Выберите вашу профессию\"\r\n                            />\r\n                            <RadioField\r\n                                options={[\r\n                                    { name: \"Male\", value: \"male\" },\r\n                                    { name: \"Female\", value: \"female\" },\r\n                                    { name: \"Other\", value: \"other\" }\r\n                                ]}\r\n                                value={data.sex}\r\n                                name=\"sex\"\r\n                                onChange={handleChange}\r\n                                label=\"Выберите ваш пол \"\r\n                            />\r\n                            <MultiSelectField\r\n                                options={qualities}\r\n                                onChange={handleChange}\r\n                                name=\"qualities\"\r\n                                label=\"Выберите ваши качества\"\r\n                                selected={data.qualities}\r\n                                values\r\n                            />\r\n                            <button\r\n                                type=\"submit\"\r\n                                disabled={!isValid}\r\n                                className=\"btn btn-secondary w-100 mx-auto\"\r\n                            >\r\n                                Обновить\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <p>Loading...</p>;\r\n    }\r\n};\r\n\r\nexport default EditUserForm;\r\n","import React from \"react\";\nimport Users from \"./components/layouts/users\";\nimport NavBar from \"./components/ui/navBar\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Main from \"./components/layouts/main\";\nimport Login from \"./components/layouts/login\";\nimport EditUserForm from \"./components/ui/editUserForm\";\nimport { ToastContainer } from \"react-toastify\";\nimport { ProfessionProvider } from \"./hooks/useProfession\";\nimport { QualitiesProvider } from \"./hooks/useQuality\";\nimport AuthProvider from \"./hooks/useAuth\";\n\nconst App = () => {\n    return (\n        <>\n            <AuthProvider>\n                <NavBar />\n\n                <QualitiesProvider>\n                    <ProfessionProvider>\n                        <Switch>\n                            <Route\n                                path=\"/users/:userId?/edit\"\n                                component={EditUserForm}\n                            />\n                            <Route path=\"/users/:userId?\" component={Users} />\n                            <Route path=\"/login/:type?\" component={Login} />\n                            <Route path=\"/\" exact component={Main} />\n                            <Redirect to=\"/\" />\n                        </Switch>\n                    </ProfessionProvider>\n                </QualitiesProvider>\n            </AuthProvider>\n            <ToastContainer />\n        </>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport App from \"./app\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}